import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as t}from"./app.17eb5f9b.js";const p={},e=t(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u975E\u8D1F\u6574\u6570 n \uFF0C\u8BF7\u8BA1\u7B97 0 \u5230 n \u4E4B\u95F4\u7684\u6BCF\u4E2A\u6570\u5B57\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D 1 \u7684\u4E2A\u6570\uFF0C\u5E76\u8F93\u51FA\u4E00\u4E2A\u6570\u7EC4\u3002</p><h2 id="\u52A8\u6001\u89C4\u5212\u89E3\u6CD5\u2014\u2014\u6700\u9AD8\u6709\u6548\u4F4D" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212\u89E3\u6CD5\u2014\u2014\u6700\u9AD8\u6709\u6548\u4F4D" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212\u89E3\u6CD5\u2014\u2014\u6700\u9AD8\u6709\u6548\u4F4D</h2><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u7528 <code>bits[i]</code> \u6765\u8868\u793A i \u7684\u4E8C\u8FDB\u5236\u4E2D 1 \u7684\u4E2A\u6570\u3002</p><p>\u5BF9\u4E8E\u4E00\u4E2A\u6B63\u6574\u6570 x\uFF0C\u5982\u679C\u5B83\u662F 2 \u7684\u6574\u6570\u6B21\u5E42\uFF0C\u90A3\u4E48\u5B83\u7684\u4E8C\u8FDB\u5236\u53EA\u6709\u7B2C\u4E00\u4F4D\u4E3A 1\uFF0C\u5176\u4F59\u4F4D\u5747\u4E3A 0\u3002</p><p><a href="/document/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%B0%E5%BD%95/%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B4%E6%95%B0%E6%98%AF%E5%90%A6%E4%B8%BA2%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E5%B9%82">\u5224\u65AD\u4E00\u4E2A\u6B63\u6574\u6570\u662F\u5426\u4E3A 2 \u7684\u6574\u6570\u6B21\u5E42</a></p><p>\u5BF9\u4E8E\u6B63\u6574\u6570 i\uFF0C\u5982\u679C\u80FD\u627E\u5230\u7B2C\u4E00\u4E2A\u6BD4\u5B83\u5C0F\u7684\u5E76\u4E14\u662F 2 \u7684\u6574\u6570\u6B21\u5E42\u7684\u503C y\uFF0C\u5219 i \u7684\u4E8C\u8FDB\u5236 1 \u7684\u6570\u91CF <code>bits[i]</code> \u7B49\u4E8E y \u7684\u4E8C\u8FDB\u5236 1 \u7684\u6570\u91CF<code>bits[y]</code> \u52A0\u4E0A i \u9664\u53BB\u6700\u9AD8\u4F4D\u7684 <code>i - y</code> \u7684\u4E8C\u8FDB\u5236\u6570\u91CF <code>bits[i - y]</code> \u3002</p><blockquote><p>\u6765\u81EA\u8BC4\u8BBA\u533A\u7684\u201C\u6CDB\u821F\u5F53\u6B4C\u201D\uFF1A\u6BD4\u5982 66\uFF0C\u4ED6\u548C 64 \u4E00\u6837\u7684\u6700\u9AD8\u4F4D\uFF0C\u90A3\u4E48 66 \u7684\u4E8C\u8FDB\u5236\u4E2A\u6570\u5C31\u7B49\u4E8E\u53BB\u6389\u6700\u9AD8\u4F4D\u4EE5\u540E\uFF0C\u5269\u4E0B\u4E8C\u8FDB\u5236\u4F4D\u7684\u6570\u52A0\u4E0A\u6700\u9AD8\u4F4D\u7684\u90A3\u4E2A 1\uFF0C\u800C 66 \u53BB\u6389\u6700\u9AD8\u4F4D\u5C31\u662F 66-64=2\uFF0C\u90A3\u4E48 2 \u7684\u4E8C\u8FDB\u5236\u4E2A\u6570\u662F 1 \u4E2A\uFF0C66 \u5219\u662F 1+1=2 \u4E2A\u3002</p></blockquote><h3 id="\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u590D\u6742\u5EA6</h3><ul><li><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n)\u3002\u5BF9\u4E8E\u6BCF\u4E2A\u6574\u6570\uFF0C\u53EA\u9700\u8981 O(1) \u7684\u65F6\u95F4\u8BA1\u7B97\u300C\u4E00\u6BD4\u7279\u6570\u300D\u3002</p></li><li><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(1)\u3002\u9664\u4E86\u8FD4\u56DE\u7684\u6570\u7EC4\u4EE5\u5916\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A\u5E38\u6570\u3002</p></li></ul><h3 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">countBits</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> bits <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> hightBit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      hightBit <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    bits<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> bits<span class="token punctuation">[</span>i <span class="token operator">-</span> hightBit<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> bits<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">countBits</span><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","003-\u524Dn\u4E2A\u6570\u5B57\u4E8C\u8FDB\u5236\u4E2D1\u7684\u4E2A\u6570.html.vue"]]);export{k as default};
