import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as t,a as n,e,g as o,f as c,h as l}from"./app.17eb5f9b.js";const i={},u={href:"https://leetcode-cn.com/problems/word-break/",target:"_blank",rel:"noopener noreferrer"},r=o("LeetCode \u539F\u9898\u94FE\u63A5"),k=c(`<p>\u7ED9\u4F60\u4E00\u4E2A\u5B57\u7B26\u4E32 s \u548C\u4E00\u4E2A\u5B57\u7B26\u4E32\u5217\u8868 wordDict \u4F5C\u4E3A\u5B57\u5178\u3002\u8BF7\u4F60\u5224\u65AD\u662F\u5426\u53EF\u4EE5\u5229\u7528\u5B57\u5178\u4E2D\u51FA\u73B0\u7684\u5355\u8BCD\u62FC\u63A5\u51FA s \u3002</p><p>\u6CE8\u610F\uFF1A\u4E0D\u8981\u6C42\u5B57\u5178\u4E2D\u51FA\u73B0\u7684\u5355\u8BCD\u5168\u90E8\u90FD\u4F7F\u7528\uFF0C\u5E76\u4E14\u5B57\u5178\u4E2D\u7684\u5355\u8BCD\u53EF\u4EE5\u91CD\u590D\u4F7F\u7528\u3002</p><h2 id="\u52A8\u6001\u89C4\u5212\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212\u89E3\u6CD5" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212\u89E3\u6CD5</h2><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>dp[i] \u8868\u793A\u4ECE 0 \u5230 i \u7EC4\u6210\u7684\u5B57\u7B26\u4E32\u662F\u5426\u53EF\u7531\u5B57\u5178\u4E32\u7EC4\u6210</p><p>\u8981\u77E5\u9053 s \u662F\u5426\u5408\u6CD5\u9700\u8981\u77E5\u9053\u5B83\u662F\u5426\u53EF\u7531\u5B57\u5178\u4E2D\u7684\u5B57\u7B26\u4E32\u7EC4\u6210</p><p>\u8981\u77E5\u9053 s \u662F\u5426\u7531\u5B57\u5178\u4E32\u7EC4\u6210\u9700\u8981\u904D\u5386\u5B83\u7684\u6240\u6709\u7EC4\u5408\u60C5\u51B5\uFF0C\u5224\u65AD\u6BCF\u4E00\u4E2A\u5B50\u4E32\u662F\u5426\u53EF\u7531\u5B57\u5178\u4E32\u7EC4\u6210</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>s.slice(0, i); i \u8868\u793A\u4ECE 0 \u5230 n \u8FDB\u884C\u904D\u5386</p><p>s.slice(j, i); j \u8868\u793A\u4ECE 0 \u5230 i \u8FDB\u884C\u904D\u5386</p><p>\u5982\u679C\u5B50\u4E32\u7684\u5DE6\u53F3\u90E8\u5206\u90FD\u53EF\u7531\u5B57\u5178\u4E32\u7EC4\u6210\u5219\u8BF4\u660E\u5F53\u524D\u4E32\u53EF\u7531\u5B57\u5178\u4E32\u7EC4\u6210\uFF0Cdp[i] = dp[j] &amp;&amp; wordDict.includes(s.slice(j, i))</p><h3 id="\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u590D\u6742\u5EA6</h3><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A<code>O(n^2)</code>\u3002</li><li>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A<code>O(n)</code>\u3002</li></ul><h3 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">wordBreak</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> wordDict</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> wordDict<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> dp<span class="token punctuation">[</span>s<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">&quot;leetcode&quot;</span><span class="token punctuation">,</span>
  wordDict <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;leet&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;code&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">wordBreak</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> wordDict<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function d(v,m){const s=l("ExternalLinkIcon");return p(),t("div",null,[n("p",null,[n("a",u,[r,e(s)])]),k])}const f=a(i,[["render",d],["__file","139-\u5355\u8BCD\u62C6\u5206.html.vue"]]);export{f as default};
