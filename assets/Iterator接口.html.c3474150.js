import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as t}from"./app.17eb5f9b.js";const p={},e=t(`<p>\u904D\u5386\u5668\u662F\u4E00\u79CD\u63A5\u53E3\uFF0C\u4E3A\u5404\u79CD\u4E0D\u540C\u7684\u6570\u636E\u7ED3\u6784\u63D0\u4F9B\u7EDF\u4E00\u7684\u8BBF\u95EE\u673A\u5236\uFF1B\u4EFB\u4F55\u6570\u636E\u7ED3\u6784\u53EA\u8981\u90E8\u7F72 <code>Iterator</code> \u63A5\u53E3\uFF0C\u5C31\u53EF\u4EE5\u7528 <code>for...of</code> \u8FDB\u884C\u904D\u5386</p><h2 id="\u539F\u751F\u5177\u6709-iterator-\u63A5\u53E3\u7684\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u539F\u751F\u5177\u6709-iterator-\u63A5\u53E3\u7684\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> \u539F\u751F\u5177\u6709 Iterator \u63A5\u53E3\u7684\u6570\u636E\u7ED3\u6784</h2><ul><li>Array</li><li>Map</li><li>Set</li><li>String</li><li>TypedArray</li><li>\u51FD\u6570\u7684 arguments \u5BF9\u8C61</li><li>NodeList \u5BF9\u8C61</li></ul><h2 id="object-\u4E3A\u4EC0\u4E48\u6CA1\u6709-iterator-\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#object-\u4E3A\u4EC0\u4E48\u6CA1\u6709-iterator-\u63A5\u53E3" aria-hidden="true">#</a> object \u4E3A\u4EC0\u4E48\u6CA1\u6709 Iterator \u63A5\u53E3</h2><p><code>object</code> \u5C5E\u6027\u7684\u904D\u5386\u987A\u5E8F\u662F\u4E0D\u786E\u5B9A\u7684\uFF0C\u9700\u8981\u5F00\u53D1\u8005\u81EA\u5DF1\u5B9A\u4E49\u3002\u672C\u8D28\u4E0A\uFF0C\u904D\u5386\u5668\u662F\u4E00\u79CD\u7EBF\u6027\u5904\u7406\uFF0C\u5BF9\u4E8E\u4EFB\u4F55\u975E\u7EBF\u6027\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u90E8\u7F72\u904D\u5386\u5668\u63A5\u53E3\uFF0C\u5C31\u7B49\u4E8E\u90E8\u7F72\u4E00\u79CD\u7EBF\u6027\u8F6C\u6362\u3002</p><h2 id="\u7ED9\u5176\u4ED6\u6570\u636E\u7ED3\u6784\u6DFB\u52A0-iterator-\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u7ED9\u5176\u4ED6\u6570\u636E\u7ED3\u6784\u6DFB\u52A0-iterator-\u63A5\u53E3" aria-hidden="true">#</a> \u7ED9\u5176\u4ED6\u6570\u636E\u7ED3\u6784\u6DFB\u52A0 Iterator \u63A5\u53E3</h2><h3 id="\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61" aria-hidden="true">#</a> \u5BF9\u8C61</h3><h4 id="\u666E\u901A\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u666E\u901A\u65B9\u6CD5" aria-hidden="true">#</a> \u666E\u901A\u65B9\u6CD5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> index <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length
          <span class="token operator">?</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">value</span><span class="token operator">:</span> keys<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
          <span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
              <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="generator-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#generator-\u51FD\u6570" aria-hidden="true">#</a> Generator \u51FD\u6570</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> propKeys <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> propKey <span class="token keyword">of</span> propKeys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>propKey<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> jane <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">first</span><span class="token operator">:</span> <span class="token string">&quot;Jane&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">last</span><span class="token operator">:</span> <span class="token string">&quot;Doe&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span>jane<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005\u76F4\u63A5\u6DFB\u52A0\u5230\u5BF9\u8C61\u7684 <code>Symbol.iterator</code> \u4E0A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> propKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> propKey <span class="token keyword">of</span> propKeys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>propKey<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> jane <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">first</span><span class="token operator">:</span> <span class="token string">&quot;Jane&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">last</span><span class="token operator">:</span> <span class="token string">&quot;Doe&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

jane<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> objectEntries<span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> jane<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u53EF\u4EE5\u76F4\u63A5\u52A0\u5728<code>Object.prototype</code>\u4E0A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> propKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> propKey <span class="token keyword">of</span> propKeys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>propKey<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7C7B\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u6570\u7EC4" aria-hidden="true">#</a> \u7C7B\u6570\u7EC4</h3><p>\u5BF9\u4E8E\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61\uFF08\u5B58\u5728\u6570\u503C\u952E\u540D\u548C length \u5C5E\u6027\uFF09\uFF0C<code>Symbol.iterator</code> \u53EF\u4EE5\u76F4\u63A5\u5F15\u7528\u6570\u7EC4\u7684 <code>Iterator</code> \u63A5\u53E3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span>
  <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7528-generator-\u51FD\u6570\u6DFB\u52A0-iterator-\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u7528-generator-\u51FD\u6570\u6DFB\u52A0-iterator-\u63A5\u53E3" aria-hidden="true">#</a> \u7528 Generator \u51FD\u6570\u6DFB\u52A0 Iterator \u63A5\u53E3</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> myIterable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token operator">...</span>myIterable<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>

<span class="token comment">// \u6216\u8005\u91C7\u7528\u4E0B\u9762\u7684\u7B80\u6D01\u5199\u6CD5</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;hello&quot;</span>
<span class="token comment">// &quot;world&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8C03\u7528-iterator-\u63A5\u53E3\u7684\u573A\u5408" tabindex="-1"><a class="header-anchor" href="#\u8C03\u7528-iterator-\u63A5\u53E3\u7684\u573A\u5408" aria-hidden="true">#</a> \u8C03\u7528 Iterator \u63A5\u53E3\u7684\u573A\u5408</h2><ul><li><p>\u6570\u7EC4\u548C Set \u7ED3\u6784\u8FDB\u884C\u89E3\u6784\u8D4B\u503C\u65F6\uFF0C\u4F1A\u9ED8\u8BA4\u8C03\u7528 Symbol.iterator \u65B9\u6CD5</p></li><li><p>\u6269\u5C55\u8FD0\u7B97\u7B26\uFF08...\uFF09\u4E5F\u4F1A\u8C03\u7528\u9ED8\u8BA4\u7684 Iterator \u63A5\u53E3\u3002</p></li><li><p>yield*\u540E\u9762\u8DDF\u7684\u662F\u4E00\u4E2A\u53EF\u904D\u5386\u7684\u7ED3\u6784\uFF0C\u5B83\u4F1A\u8C03\u7528\u8BE5\u7ED3\u6784\u7684\u904D\u5386\u5668\u63A5\u53E3\u3002</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">generator</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> iterator <span class="token operator">=</span> <span class="token function">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: 1, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: 2, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: 3, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: 4, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: 5, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>for...of</li><li>Array.from()</li><li>Map(), Set(), WeakMap(), WeakSet()\uFF08\u6BD4\u5982 new Map([[&#39;a&#39;,1],[&#39;b&#39;,2]])\uFF09</li><li>Promise.all()</li><li>Promise.race()</li></ul><h2 id="return-\u4E0E-throw" tabindex="-1"><a class="header-anchor" href="#return-\u4E0E-throw" aria-hidden="true">#</a> return() \u4E0E throw()</h2><p>\u81EA\u5DF1\u5B9E\u73B0 <code>Iterator</code> \u63A5\u53E3\u65F6\uFF0C<code>next()</code> \u662F\u5FC5\u987B\u90E8\u7F72\u7684\uFF0C<code>return()</code> \u548C <code>throw()</code> \u662F\u5426\u90E8\u7F72\u662F\u53EF\u9009\u7684</p><p><code>return()</code>\uFF1A\u5982\u679C <code>for...of</code> \u5FAA\u73AF\u63D0\u524D\u9000\u51FA\uFF08\u51FA\u9519\u6216 break\uFF09\uFF0C\u5C31\u8C03\u7528 <code>return()</code></p><p><code>throw()</code>\uFF1A\u914D\u5408 <code>Generator</code> \u51FD\u6570\u4F7F\u7528</p><h2 id="\u4E0E-for-of-\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#\u4E0E-for-of-\u7684\u5173\u7CFB" aria-hidden="true">#</a> \u4E0E for...of \u7684\u5173\u7CFB</h2><p>\u7528 <code>for...of</code> \u904D\u5386\u6570\u636E\u65F6\u4F1A\u81EA\u52A8\u53BB\u5BFB\u627E\u8BE5\u6570\u636E\u7684 <code>Iterator</code> \u63A5\u53E3\uFF0C\u5373\u8BE5\u6570\u636E\u4E0A\u7684 <code>Symbol.iterator</code> \u5C5E\u6027</p>`,30),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","Iterator\u63A5\u53E3.html.vue"]]);export{k as default};
