import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,e as t,f as s,g as p,h as l}from"./app.17eb5f9b.js";const i={},u=s(`<table><thead><tr><th>\u540D\u79F0</th><th>\u6982\u5FF5</th><th>\u4F5C\u7528</th><th>\u5B98\u65B9\u89E3\u91CA</th></tr></thead><tbody><tr><td><code>Schema</code></td><td>\u6A21\u5F0F</td><td>\u5B9A\u4E49\u6587\u6863\u7684\u6570\u636E\u7ED3\u6784\u548C\u5C5E\u6027\u7C7B\u578B</td><td>\u6BCF\u4E2A <code>schema</code> \u90FD\u4F1A\u6620\u5C04\u5230\u4E00\u4E2A <code>MongoDB collection</code> \uFF0C\u5E76\u5B9A\u4E49\u8FD9\u4E2A <code>collection</code> \u91CC\u7684\u6587\u6863\u7684\u6784\u6210</td></tr><tr><td><code>Model</code></td><td>\u6A21\u578B</td><td>\u4E00\u4E2A <code>Model</code> \u7B49\u540C\u4E8E\u4E00\u4E2A <code>collection</code></td><td><code>Models</code> \u662F\u4ECE <code>Schema</code> \u7F16\u8BD1\u800C\u6765\u7684\u6784\u9020\u51FD\u6570\uFF0C<code>Models</code> \u7684\u5B9E\u4F8B\u662F <code>documents</code></td></tr><tr><td><code>document</code></td><td>\u6587\u6863</td><td>\u4E00\u4E2A <code>document</code> \u5C31\u662F <code>collection</code> \u4E2D\u7684\u4E00\u6761\u6570\u636E</td><td><code>mongoose</code> \u6587\u6863\u8868\u793A\u4E0E\u5B58\u50A8\u5728 <code>MongoDB</code> \u4E2D\u7684\u6587\u6863\u7684\u4E00\u5BF9\u4E00\u6620\u5C04\u3002\u6BCF\u4E2A\u6587\u6863\u90FD\u662F\u5176 <code>Model</code> \u7684\u4E00\u4E2A\u5B9E\u4F8B\u3002</td></tr></tbody></table><h2 id="schema" tabindex="-1"><a class="header-anchor" href="#schema" aria-hidden="true">#</a> Schema</h2><p><code>Schema</code> \u7528\u6765\u5B9A\u4E49\u6587\u6863\u7684\u7ED3\u6784\uFF0C\u9700\u8981\u7528 <code>mongoose.model(&#39;Test&#39;, schema)</code> \u5C06 <code>Schema</code> \u7F16\u8BD1 \u4E3A <code>Model</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">living</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">array</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ofString</span><span class="token operator">:</span> <span class="token punctuation">[</span>String<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ofArrayOfNumbers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>Number<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mapOfString</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Map<span class="token punctuation">,</span>
    <span class="token keyword">of</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u907F\u514D\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u58F0\u660E\u65B9\u6CD5</strong>\u3002</p><h3 id="schematype-\u9009\u9879" tabindex="-1"><a class="header-anchor" href="#schematype-\u9009\u9879" aria-hidden="true">#</a> SchemaType \u9009\u9879</h3>`,6),r={href:"https://mongoosejs.com/docs/schematypes.html#schematype-options",target:"_blank",rel:"noopener noreferrer"},d=p("\u5B8C\u6574\u9009\u9879"),k=s(`<p>\u6570\u7EC4\u62E5\u6709\u9690\u542B\u7684\u9ED8\u8BA4\u503C\uFF1A<code>[]</code>\uFF08\u7A7A\u6570\u7EC4\uFF09\uFF0C\u53EF\u4EE5\u8BBE\u7F6E <code>default: undefined</code> \u6765\u5C06\u9ED8\u8BA4\u503C\u8BBE\u4E3A <code>undefined</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// \u7C7B\u578B</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u662F\u5426\u5FC5\u586B</span>
    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u522B\u540D</span>
    <span class="token literal-property property">timestamps</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// \u662F\u5426\u81EA\u52A8\u6DFB\u52A0\u65F6\u95F4\u6233\uFF1AcreatedAt and updatedAt</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="timestamps-\u65F6\u95F4\u6233" tabindex="-1"><a class="header-anchor" href="#timestamps-\u65F6\u95F4\u6233" aria-hidden="true">#</a> timestamps \u65F6\u95F4\u6233</h4><p><code>timestamps</code> \u5C5E\u6027\u8BBE\u7F6E\u4E3A <code>true</code> \u540E\u4F1A\u81EA\u52A8\u5728\u6587\u6863\u4E2D\u6DFB\u52A0\u4E24\u4E2A <code>Date</code> \u7C7B\u578B\u7684\u5C5E\u6027\uFF0C<code>createdAt</code> \u4E3A\u521B\u5EFA\u65F6\u7684\u65F6\u95F4\u6233\uFF0C<code>updatedAt</code> \u4E3A\u6700\u540E\u4E00\u6B21\u66F4\u65B0\u7684\u65F6\u95F4\u6233\u3002</p><p>\u4F1A\u4FEE\u6539 <code>updatedAt</code> \u7684\u65B9\u6CD5\uFF1A<code>save()</code> \u3001<code>updateOne()</code> \u3001<code>updateMany()</code> \u3001<code>findOneAndUpdate()</code> \u3001<code>update()</code> \u3001<code>replaceOne()</code> \u3001<code>bulkWrite()</code>\u3002</p><p>\u8FD9\u4E9B\u65B9\u6CD5\u90FD\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E <code>timestamps: false</code> \u4E0D\u4FEE\u6539 <code>updatedAt</code>\u3002</p><h3 id="\u5B9E\u4F8B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u4F8B\u65B9\u6CD5</h3><p>\u5B9A\u4E49\u5728 <code>Schema</code> \u4E0A\u7684\u5B9E\u4F8B\u65B9\u6CD5\u53EF\u4EE5\u5728 <code>document</code> \u4E0A\u8C03\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> animalSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> String <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animalSchema<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function-variable function">findSimilarTypes</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&quot;Animal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token punctuation">}</span><span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Animal <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&quot;Animal&quot;</span><span class="token punctuation">,</span> animalSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;dog&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dog<span class="token punctuation">.</span><span class="token function">findSimilarTypes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> dogs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dogs<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// woof</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9759\u6001\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u65B9\u6CD5" aria-hidden="true">#</a> \u9759\u6001\u65B9\u6CD5</h3><p>\u5B9A\u4E49\u5728 <code>Schema</code> \u4E0A\u7684\u9759\u6001\u65B9\u6CD5\u53EF\u4EE5\u5728 <code>Model</code> \u4E0A\u8C03\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> animalSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> String <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B2C\u4E00\u79CD\u5B9A\u4E49\u65B9\u5F0F</span>
animalSchema<span class="token punctuation">.</span>statics<span class="token punctuation">.</span><span class="token function-variable function">findByName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;i&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B2C\u4E8C\u79CD\u5B9A\u4E49\u65B9\u5F0F</span>
animalSchema<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&quot;findByBreed&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">breed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> breed <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Animal <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&quot;Animal&quot;</span><span class="token punctuation">,</span> animalSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
Animal<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u67E5\u8BE2\u52A9\u624B" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8BE2\u52A9\u624B" aria-hidden="true">#</a> \u67E5\u8BE2\u52A9\u624B</h3><p>\u7528\u4E8E\u6269\u5C55 <code>mongoose</code> \u7684\u94FE\u5F0F\u67E5\u8BE2\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> animalSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> String <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animalSchema<span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token function-variable function">byName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;i&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Animal <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&quot;Animal&quot;</span><span class="token punctuation">,</span> animalSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
Animal<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">byName</span><span class="token punctuation">(</span><span class="token string">&quot;fido&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> animals</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u865A\u62DF\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u865A\u62DF\u6570\u636E" aria-hidden="true">#</a> \u865A\u62DF\u6570\u636E</h3><p><code>Virtuals</code> \u662F\u53EF\u4EE5\u83B7\u53D6\u548C\u8BBE\u7F6E\u4F46\u4E0D\u4F1A\u6301\u4E45\u4FDD\u5B58\u5230 <code>MongoDB</code> \u7684\u6587\u6863\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> personSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">first</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">last</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
personSchema
  <span class="token punctuation">.</span><span class="token function">virtual</span><span class="token punctuation">(</span><span class="token string">&quot;fullName&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span>first <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span>last<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span>first <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span>last <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

axl<span class="token punctuation">.</span>fullName <span class="token operator">=</span> <span class="token string">&quot;William Rose&quot;</span><span class="token punctuation">;</span> <span class="token comment">// Now \`axl.name.first\` is &quot;William&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#\u522B\u540D" aria-hidden="true">#</a> \u522B\u540D</h3><p>\u4E3A\u5C5E\u6027\u8BBE\u7F6E\u522B\u540D\uFF0C\u5728\u5F00\u53D1\u65F6\u4FDD\u8BC1\u53EF\u8BFB\u6027\uFF0C\u540C\u65F6\u51CF\u5C11\u6570\u636E\u5E93\u4E2D\u5B58\u50A8\u6570\u636E\u7684 <code>size</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> personSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token comment">// \u73B0\u5728\uFF0C\u8BBF\u95EE&#39;name&#39;\u5C06\u83B7\u5F97&#39;n&#39;\u7684\u503C\uFF0C\u8BBE\u7F6E&#39;name&#39;\u5C06\u8BBE\u7F6E&#39;n&#39;\u7684\u503C\`</span>
    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9009\u9879" tabindex="-1"><a class="header-anchor" href="#\u9009\u9879" aria-hidden="true">#</a> \u9009\u9879</h3>`,22),m={href:"https://mongoosejs.com/docs/guide.html#options",target:"_blank",rel:"noopener noreferrer"},v=p("\u5B8C\u6574\u9009\u9879"),h=s(`<h4 id="collection" tabindex="-1"><a class="header-anchor" href="#collection" aria-hidden="true">#</a> collection</h4><p><code>mongoose</code> \u9ED8\u8BA4\u5C06 <code>Model</code> \u540D\u79F0\u4F5C\u4E3A <code>collection</code> \u540D\u79F0\uFF0C\u8FD9\u79CD\u9ED8\u8BA4\u884C\u4E3A\u4F1A\u5C06\u540D\u79F0\u4FEE\u6539\u4E3A<strong>\u590D\u6570</strong>\u4E14<strong>\u5C0F\u5199</strong>\u3002</p><p>\u901A\u8FC7 <code>Schema</code> \u7684 <code>collection</code> \u9009\u9879\u53EF\u4EE5\u6307\u5B9A <code>collection</code>\uFF0C\u8BBE\u7F6E\u540E <code>mongoose.model()</code> \u4E00\u53C2\u7684\u540D\u79F0\u65E0\u6548\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> kittySchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">collection</span><span class="token operator">:</span> <span class="token string">&quot;kitty&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> Model</h2><p>\u4E00\u4E2A <code>Model</code> \u7B49\u540C\u4E8E\u4E00\u4E2A <code>collection</code>\u3002\u8C03\u7528 <code>mongoose.model()</code> \u751F\u6210\u4E00\u4E2A\u6A21\u578B\u7684\u540C\u65F6 <code>mongoose</code> \u4F1A\u540C\u6B65\u5728\u6570\u636E\u5E93\u4E2D\u521B\u5EFA\u4E00\u4E2A <code>collection</code>\u3002</p><p>\u9700\u6CE8\u610F <code>mongoose.model(&quot;Kitten&quot;, kittySchema)</code> \u65B9\u6CD5\u4E0D\u4F20\u7B2C\u4E09\u4E2A\u53C2\u6570\u65F6 <code>mongoose</code> \u4F1A\u5C06 <code>collection</code> \u540D\u79F0\u8BBE\u5B9A\u4E3A\u4E00\u53C2\u7684<strong>\u590D\u6570\u5F62\u5F0F</strong>\uFF0C\u5E76\u4E14\u751F\u6210\u7684 <code>collection</code> \u540D\u79F0\u90FD\u662F<strong>\u5C0F\u5199</strong>\u3002</p><p><code>.model()</code> \u51FD\u6570\u4F1A\u590D\u5236 <code>schema</code>\u3002\u5728\u8C03\u7528 <code>.model()</code> \u4E4B\u524D\u786E\u4FDD\u4F60\u5DF2\u7ECF\u6DFB\u52A0\u4E86\u6240\u6709\u4F60\u60F3\u8981\u7684\u4E1C\u897F\u5230 <code>schema</code>\uFF0C\u5305\u62EC\u94A9\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Kitten <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&quot;Kitten&quot;</span><span class="token punctuation">,</span> kittySchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// collection\uFF1Akittens</span>
<span class="token keyword">const</span> Kitten <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&quot;Ny&quot;</span><span class="token punctuation">,</span> kittySchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// collection\uFF1Anies</span>
<span class="token keyword">const</span> Kitten <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&quot;Kitten&quot;</span><span class="token punctuation">,</span> kittySchema<span class="token punctuation">,</span> <span class="token string">&quot;Kitten&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// collection\uFF1Akitten</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function y(b,g){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",r,[d,t(a)])]),k,n("p",null,[n("a",m,[v,t(a)])]),h])}const S=e(i,[["render",y],["__file","Mongoose\u6982\u5FF5.html.vue"]]);export{S as default};
