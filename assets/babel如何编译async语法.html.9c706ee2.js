import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as t}from"./app.17eb5f9b.js";const p={},e=t(`<h2 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;data: &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> data2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;data2: &quot;</span><span class="token punctuation">,</span> data2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD9\u6837\u7684\u4E00\u4E2A\u51FD\u6570 \u5E94\u8BE5\u518D1\u79D2\u540E\u6253\u5370data \u518D\u8FC7\u4E00\u79D2\u6253\u5370data2 \u6700\u540E\u6253\u5370success</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="babel-\u7F16\u8BD1\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#babel-\u7F16\u8BD1\u7ED3\u679C" aria-hidden="true">#</a> babel \u7F16\u8BD1\u7ED3\u679C</h2><h3 id="\u539F\u59CB\u7F16\u8BD1\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u539F\u59CB\u7F16\u8BD1\u4EE3\u7801" aria-hidden="true">#</a> \u539F\u59CB\u7F16\u8BD1\u4EE3\u7801</h3><p>\u5BF9\u4E8E\u4E0A\u9762\u7684\u793A\u4F8B\uFF0C<a href="(https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&amp;build=&amp;builtIns=false&amp;corejs=false&amp;spec=false&amp;loose=false&amp;code_lz=MYewdgzgLgBA5gUygEQIZVTAvDAFASmwD4AoGGMBAdxgAUAnEAWwEsIFdd6EIQAbAG4JCWIjHZQAKiyYIQAVyicRY7r0EcARABN0qTfgA0MAIwAGC_nwBuEiVQQAnmGAwAZvJdQW4GFB5KhADeZDCgkLC6GNgwqFSoLLCIKHoEtuTh6ggAdHwgcLg6egBcMJrGUag2oZmRegBMMXEJSUhoGGk14Fm5-YWV9aXlMAPV5NxQ8vRgZRDywMA8EJq2AL52APQbMICb8YDsFoAhboAAcoBUcoC_ioAOpjCAKXqAp9GAsYomgEuegHAqgMpGgA7KlTD3gOPxR09PgMYIAAc3eHzmCyWJH80AI2SgAAsEGBOGoVGFuvwcnkCuibEA&amp;debug=false&amp;forceAllTransforms=true&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=false&amp;fileSize=false&amp;timeTravel=false&amp;sourceType=module&amp;lineWrap=true&amp;presets=env%2Creact%2Cstage-0%2Cstage-1%2Cstage-2%2Cstage-3%2Ctypescript%2Cflow&amp;prettier=false&amp;targets=&amp;version=7.20.14&amp;externalPlugins=&amp;assumptions=%7B%7D)">babel \u7F16\u8BD1</a>\u7ED3\u679C\u5982\u4E0B\uFF08\u53EA\u8282\u9009\u5173\u952E\u5185\u5BB9\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">_test</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token comment">// \u8FD9\u6837\u7684\u4E00\u4E2A\u51FD\u6570 \u5E94\u8BE5\u518D1\u79D2\u540E\u6253\u5370data \u518D\u8FC7\u4E00\u79D2\u6253\u5370data2 \u6700\u540E\u6253\u5370success</span>
<span class="token keyword">function</span> <span class="token function">_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  _test <span class="token operator">=</span> <span class="token function">_asyncToGenerator</span><span class="token punctuation">(</span>
    <span class="token comment">/*#__PURE__*/</span> <span class="token function">_regeneratorRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">_callee</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> data<span class="token punctuation">,</span> data2<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">_regeneratorRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">_callee$</span><span class="token punctuation">(</span><span class="token parameter">_context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
          <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>_context<span class="token punctuation">.</span>prev <span class="token operator">=</span> _context<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
              _context<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
              <span class="token keyword">return</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
              data <span class="token operator">=</span> _context<span class="token punctuation">.</span>sent<span class="token punctuation">;</span>
              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;data: &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
              _context<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
              <span class="token keyword">return</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>
              data2 <span class="token operator">=</span> _context<span class="token punctuation">.</span>sent<span class="token punctuation">;</span>
              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;data2: &quot;</span><span class="token punctuation">,</span> data2<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token keyword">return</span> _context<span class="token punctuation">.</span><span class="token function">abrupt</span><span class="token punctuation">(</span><span class="token string">&quot;return&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token string">&quot;end&quot;</span><span class="token operator">:</span>
              <span class="token keyword">return</span> _context<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> _callee<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">_test</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6574\u7406\u7F16\u8BD1\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u6574\u7406\u7F16\u8BD1\u4EE3\u7801" aria-hidden="true">#</a> \u6574\u7406\u7F16\u8BD1\u4EE3\u7801</h3><p>\u5C06\u4E0A\u9762\u7F16\u8BD1\u540E\u7684\u4EE3\u7801\u8C03\u6574\u6210\u5BB9\u6613\u7406\u89E3\u7684\u6837\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">fn1</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">_callee</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> data<span class="token punctuation">,</span> data2<span class="token punctuation">;</span>
    <span class="token function-variable function">fn2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">_callee$</span><span class="token punctuation">(</span><span class="token parameter">_context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>_context<span class="token punctuation">.</span>prev <span class="token operator">=</span> _context<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
            _context<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
            data <span class="token operator">=</span> _context<span class="token punctuation">.</span>sent<span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;data: &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
            _context<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>
            data2 <span class="token operator">=</span> _context<span class="token punctuation">.</span>sent<span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;data2: &quot;</span><span class="token punctuation">,</span> data2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> _context<span class="token punctuation">.</span><span class="token function">abrupt</span><span class="token punctuation">(</span><span class="token string">&quot;return&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>
          <span class="token keyword">case</span> <span class="token string">&quot;end&quot;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> _context<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">_regeneratorRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>fn2<span class="token punctuation">,</span> _callee<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  fn <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span> <span class="token function">_regeneratorRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span>fn1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  _test <span class="token operator">=</span> <span class="token function">_asyncToGenerator</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">_test</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63D0\u53D6\u5173\u952E\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u63D0\u53D6\u5173\u952E\u4EE3\u7801" aria-hidden="true">#</a> \u63D0\u53D6\u5173\u952E\u4EE3\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">fn1</span> <span class="token operator">=</span> <span class="token keyword">function</span> _callee <span class="token punctuation">{</span>
    <span class="token function-variable function">fn2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">_callee$</span><span class="token punctuation">(</span><span class="token parameter">_context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">return</span> <span class="token function">_regeneratorRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>fn2<span class="token punctuation">,</span> _callee<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  fn <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span> <span class="token function">_regeneratorRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span>fn1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  _test <span class="token operator">=</span> <span class="token function">_asyncToGenerator</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">_test</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u641E\u8FD9\u6BB5\u4EE3\u7801\u7684\u903B\u8F91\u9700\u8981\u4E86\u89E3\u8FD9\u4E9B\u95EE\u9898\uFF1A</p><ul><li><code>_asyncToGenerator()</code> \u65B9\u6CD5\u7684\u4F5C\u7528\u3002</li><li><code>_regeneratorRuntime()</code> \u65B9\u6CD5\u7684\u4F5C\u7528\uFF0C\u4EE5\u53CA\u5B83\u8FD4\u56DE\u7684 <code>.wrap()</code> \u548C <code>.mark()</code> \u65B9\u6CD5\u7684\u4F5C\u7528\u3002</li><li><code>_callee()</code>\u3001<code>_callee$()</code> \u65B9\u6CD5\u7684\u4F5C\u7528\u3002</li></ul><h2 id="babel-\u5BF9-async-await-\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#babel-\u5BF9-async-await-\u7684\u5B9E\u73B0" aria-hidden="true">#</a> babel \u5BF9 <code>async/await</code> \u7684\u5B9E\u73B0</h2><p>\u5728 babel \u7F16\u8BD1\u540E\u7684\u4EE3\u7801\u4E2D\u53EF\u4EE5\u627E\u5230\u5176\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">asyncGeneratorStep</span><span class="token punctuation">(</span><span class="token parameter">gen<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> _next<span class="token punctuation">,</span> _throw<span class="token punctuation">,</span> key<span class="token punctuation">,</span> arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> info <span class="token operator">=</span> gen<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> value <span class="token operator">=</span> info<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>_next<span class="token punctuation">,</span> _throw<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">_asyncToGenerator</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
      args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> gen <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">function</span> <span class="token function">_next</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">asyncGeneratorStep</span><span class="token punctuation">(</span>gen<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> _next<span class="token punctuation">,</span> _throw<span class="token punctuation">,</span> <span class="token string">&quot;next&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">function</span> <span class="token function">_throw</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">asyncGeneratorStep</span><span class="token punctuation">(</span>gen<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> _next<span class="token punctuation">,</span> _throw<span class="token punctuation">,</span> <span class="token string">&quot;throw&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">_next</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>_asyncToGenerator(fn)</code> \u63A5\u6536\u4E00\u4E2A\u51FD\u6570\uFF08\u770B\u8D77\u6765\u50CF\u662F\u4E00\u4E2A Generator \u51FD\u6570\uFF09\uFF0C\u8FD4\u56DE\u4E00\u4E2A Promise\uFF0C\u5177\u4F53\u64CD\u4F5C\u7531 <code>asyncGeneratorStep()</code> \u65B9\u6CD5\u6267\u884C\uFF0C\u5E76\u7531\u8BE5\u65B9\u6CD5\u51B3\u5B9A\u8FD9\u4E2A Promise \u4F55\u65F6 resolve \u6216 reject\u3002</p><p><code>asyncGeneratorStep()</code> \u65B9\u6CD5\u5206\u6790\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token parameter">gen</span> _asyncToGenerator(fn) \u4E2D\u6839\u636E Generator \u51FD\u6570\uFF08fn\uFF09\u751F\u6210\u7684\u8FED\u4EE3\u5668
 * <span class="token keyword">@param</span> <span class="token parameter">resolve</span> _asyncToGenerator(fn) \u8FD4\u56DE\u503C Promise \u7684 resolve \u65B9\u6CD5
 * <span class="token keyword">@param</span> <span class="token parameter">reject</span> _asyncToGenerator(fn) \u8FD4\u56DE\u503C Promise \u7684 reject \u65B9\u6CD5
 * <span class="token keyword">@param</span> <span class="token parameter">_next</span> \u63A5\u6536\u4E00\u4E2A\u53C2\u6570\uFF0C\u4F5C\u4E3A\u4E0B\u4E00\u6B21\u8C03\u7528 asyncGeneratorStep() \u65B9\u6CD5\u7684 arg
 * <span class="token keyword">@param</span> <span class="token parameter">_throw</span> \u63A5\u6536\u4E00\u4E2A\u53C2\u6570\uFF0C\u4F5C\u4E3A\u4E0B\u4E00\u6B21\u8C03\u7528 asyncGeneratorStep() \u65B9\u6CD5\u7684 arg
 * <span class="token keyword">@param</span> <span class="token parameter">key</span> &#39;next&#39; | &#39;throw&#39; \u7528\u6765\u6807\u8BB0\u672C\u6B21\u9700\u8981\u8C03\u7528 gen \u7684 .next() \u8FD8\u662F .throw()
 * <span class="token keyword">@param</span> <span class="token parameter">arg</span> \u8FED\u4EE3\u5668\u4E0A\u6B21\u8FED\u4EE3\u7684\u8FD4\u56DE\u503C
 */</span>
<span class="token keyword">function</span> <span class="token function">asyncGeneratorStep</span><span class="token punctuation">(</span><span class="token parameter">gen<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> _next<span class="token punctuation">,</span> _throw<span class="token punctuation">,</span> key<span class="token punctuation">,</span> arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528 gen \u7684 .next() \u6216 .throw() \u65B9\u6CD5\uFF0C\u5E76\u5C06\u4E0A\u6B21\u8FED\u4EE3\u7684\u8FD4\u56DE\u503C\u4F20\u9012\u4E0B\u53BB</span>
    <span class="token keyword">var</span> info <span class="token operator">=</span> gen<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> value <span class="token operator">=</span> info<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>_next<span class="token punctuation">,</span> _throw<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u89C1 <code>_asyncToGenerator()</code> \u548C <code>asyncGeneratorStep()</code> \u5176\u5B9E\u5C31\u662F\u5BF9 <code>async</code> \u548C <code>await</code> \u7684\u5B9E\u73B0\uFF1A<code>_asyncToGenerator()</code> \u63A5\u6536\u7C7B\u4F3C Generator \u7684\u51FD\u6570\uFF0C\u5E76\u4E14\u4E00\u6B65\u6B65\u6267\u884C yield \u8BED\u53E5\uFF0C\u6700\u7EC8\u8FD4\u56DE\u4E00\u4E2A promise\u3002</p>`,20),o=[e];function c(u,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","babel\u5982\u4F55\u7F16\u8BD1async\u8BED\u6CD5.html.vue"]]);export{r as default};
