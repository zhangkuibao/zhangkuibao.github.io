import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,a as n,e,f as o,g as c,h as i}from"./app.17eb5f9b.js";const l={},u=o(`<p>child_process \u63D0\u4F9B\u4E86\u884D\u751F\u5B50\u8FDB\u7A0B\u7684\u80FD\u529B\u3002</p><h2 id="\u6458\u8981" tabindex="-1"><a class="header-anchor" href="#\u6458\u8981" aria-hidden="true">#</a> \u6458\u8981</h2><p>exec() \u53EF\u76F4\u63A5\u8FD0\u884C\u5B8C\u6574\u547D\u4EE4 <code>exec(&#39;npm run build:mp-alipay&#39;)</code>\u3002</p><p>spawn() \u65B9\u6CD5\u9700\u8981\u5C06\u547D\u4EE4\u62C6\u5206\u6267\u884C <code>spawn(&quot;npm&quot;, [&quot;run&quot;, &quot;build:mp-alipay&quot;])</code>\u3002</p><p>execFile() \u65B9\u6CD5\u4E0E spawn \u7C7B\u4F3C <code>execFile(&quot;npm&quot;, [&quot;run&quot;, &quot;build:mp-alipay&quot;])</code>\u3002</p><p>fork() \u65B9\u6CD5\u53EF\u4EE5\u7528\u6765\u6267\u884C\u5176\u4ED6 node \u7A0B\u5E8F <code>fork(&#39;./index&#39;)</code>\u3002</p><p>\u76D1\u542C\u5B50\u8FDB\u7A0B\u7684\u9519\u8BEF\u8F93\u51FA <code>subprocess.stderr.on(&#39;data&#39;)</code>\u3002</p><p>\u76D1\u542C\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u51FA <code>subprocess.stdout.on(&#39;data&#39;)</code>\u3002</p><p>\u6CE8\u610F npm \u547D\u4EE4\u9700\u8981\u5224\u65AD\u5E73\u53F0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> npmcmd <span class="token operator">=</span> process<span class="token punctuation">.</span>platform <span class="token operator">===</span> <span class="token string">&quot;win32&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;npm.cmd&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;npm&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5" aria-hidden="true">#</a> \u65B9\u6CD5</h2><h3 id="exec-command-options-callback" tabindex="-1"><a class="header-anchor" href="#exec-command-options-callback" aria-hidden="true">#</a> exec(command, options?, callback?)</h3><ul><li><p>command \u8981\u6267\u884C\u7684\u547D\u4EE4\u3002</p></li><li><p>options \u914D\u7F6E\u3002</p></li><li><p>callback \u56DE\u8C03\uFF0C\u56DE\u8C03\u4E2D\u63A5\u6536 error\u3001stdout\u3001stderr\u3002</p></li></ul><p>child_process.exec() \u4E0D\u66FF\u6362\u73B0\u6709\u8FDB\u7A0B\uFF0C\u800C\u662F\u4F7F\u7528 shell \u6765\u6267\u884C\u547D\u4EE4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> exec <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;child_process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> child <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span>
  <span class="token string">&quot;npm run build:mp-alipay&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">cwd</span><span class="token operator">:</span> __dirname<span class="token punctuation">,</span> <span class="token comment">// \u5B50\u8FDB\u7A0B\u7684\u5DE5\u4F5C\u76EE\u5F55\uFF0C\u9ED8\u8BA4\u4E3A\u5F53\u524D\u76EE\u5F55</span>
    <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u73AF\u5883\u53D8\u91CF\u952E\u503C\u5BF9\uFF0Cundefined\u4F1A\u88AB\u5FFD\u7565</span>
    <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5B9A\u7528\u4E8E\u89E3\u7801 stdout \u548C stderr \u7684\u5B57\u7B26\u7F16\u7801</span>
    signal<span class="token punctuation">,</span> <span class="token comment">// \u5141\u8BB8\u4F7F\u7528\u4E2D\u6B62\u4FE1\u53F7\u4E2D\u6B62\u5B50\u8FDB\u7A0B</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token comment">// \u5141\u8BB8\u5B50\u8FDB\u7A0B\u8FD0\u884C\u7684\u6700\u957F\u65F6\u95F4\uFF0C\u9ED8\u8BA4 undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9519\u8BEF\u5BF9\u8C61\uFF0C\u6B63\u5E38\u9000\u51FA\u65F6 error \u4E3A null\uFF0Cerror.code\u4E3A\u8FDB\u7A0B\u7684\u9000\u51FA\u7801</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stdout<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5B50\u8FDB\u7A0B\u7684\u6240\u6709\u6807\u51C6\u8F93\u51FA</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stderr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5B50\u8FDB\u7A0B\u7684\u6240\u6709\u6807\u51C6\u9519\u8BEF\u8F93\u51FA</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4F7F\u7528-signal-\u5173\u95ED\u4E2D\u6B62\u5B50\u8FDB\u7A0B\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-signal-\u5173\u95ED\u4E2D\u6B62\u5B50\u8FDB\u7A0B\u8FDB\u7A0B" aria-hidden="true">#</a> \u4F7F\u7528 signal \u5173\u95ED\u4E2D\u6B62\u5B50\u8FDB\u7A0B\u8FDB\u7A0B</h4><p>\u5728 express \u542F\u7684\u670D\u52A1\u4E2D\u5F00\u542F\u5B50\u8FDB\u7A0B\u6253\u5305\u7528\u6B64\u65B9\u6CD5\u5E76\u4E0D\u80FD\u5173\u95ED\u5B50\u8FDB\u7A0B\uFF0C\u6682\u65E0\u89E3\u51B3\u65B9\u6848\uFF082021.11.24\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span> <span class="token operator">=</span> controller<span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> exec <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;child_process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> child <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;npm run build:mp-alipay&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  controller<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spawn-command-args-options" tabindex="-1"><a class="header-anchor" href="#spawn-command-args-options" aria-hidden="true">#</a> spawn(command, args?, options?)</h3><ul><li><p>command \u8981\u6267\u884C\u7684\u547D\u4EE4\u3002</p></li><li><p>args \u547D\u4EE4\u884C\u53C2\u6570\u3002</p></li><li><p>options \u914D\u7F6E\u3002</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;child_process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&quot;npm&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">build:mp-alipay</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="execfile-file-args-options-callback" tabindex="-1"><a class="header-anchor" href="#execfile-file-args-options-callback" aria-hidden="true">#</a> execFile(file, args?, options?, callback?)</h3><ul><li><p>file \u8981\u8FD0\u884C\u7684<strong>\u53EF\u6267\u884C\u6587\u4EF6</strong>\u7684<strong>\u540D\u79F0</strong>\u6216<strong>\u8DEF\u5F84</strong>\uFF0C\u6BD4\u5982 node\u3002</p></li><li><p>args \u547D\u4EE4\u884C\u53C2\u6570\u3002</p></li><li><p>options \u914D\u7F6E\u3002</p></li><li><p>callback \u56DE\u8C03\uFF0C\u56DE\u8C03\u4E2D\u63A5\u6536 error\u3001stdout\u3001stderr\u3002</p></li></ul><p>\u8C03\u7528\u65B9\u5F0F\u4E0E exec \u6709\u6240\u4E0D\u540C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> execFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;child_process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> child <span class="token operator">=</span> <span class="token function">execFile</span><span class="token punctuation">(</span><span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;-v&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fork-modulepath-args-options" tabindex="-1"><a class="header-anchor" href="#fork-modulepath-args-options" aria-hidden="true">#</a> fork(modulePath, args?, options?)</h3><ul><li><p>modulePath \u8981\u6267\u884C\u7684\u6A21\u5757\uFF08js \u6587\u4EF6\uFF09\u3002</p></li><li><p>args \u547D\u4EE4\u884C\u53C2\u6570\u3002</p></li><li><p>options \u914D\u7F6E\u3002</p></li></ul><p>child_process.fork() \u65B9\u6CD5\u662F child_process.spawn() \u7684\u7279\u4F8B\uFF0C\u4E13\u95E8\u7528\u4E8E\u884D\u751F\u65B0\u7684 Node.js \u8FDB\u7A0B\u3002</p><p>\u884D\u751F\u7684 Node.js \u5B50\u8FDB\u7A0B\u72EC\u7ACB\u4E8E\u7236\u8FDB\u7A0B\uFF0C\u9664\u4E86\u4E24\u8005\u4E4B\u95F4\u5EFA\u7ACB\u7684 IPC \u901A\u4FE1\u901A\u9053\u3002</p><p>\u6BCF\u4E2A\u8FDB\u7A0B\u90FD\u6709\u81EA\u5DF1\u7684\u5185\u5B58\uFF0C\u5177\u6709\u81EA\u5DF1\u7684 V8 \u5B9E\u4F8B\u3002 \u7531\u4E8E\u9700\u8981\u989D\u5916\u7684\u8D44\u6E90\u5206\u914D\uFF0C\u4E0D\u5EFA\u8BAE\u884D\u751F\u5927\u91CF\u5B50 Node.js \u8FDB\u7A0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> fork <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;child_process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">fork</span><span class="token punctuation">(</span><span class="token string">&quot;./index2.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="childprocess-\u7C7B" tabindex="-1"><a class="header-anchor" href="#childprocess-\u7C7B" aria-hidden="true">#</a> ChildProcess \u7C7B</h2><p>exec \u7B49\u65B9\u6CD5\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A ChildProcess \u7C7B\uFF0C\u8868\u793A\u884D\u751F\u7684\u5B50\u8FDB\u7A0B\u3002</p><h3 id="subprocess-stderr" tabindex="-1"><a class="header-anchor" href="#subprocess-stderr" aria-hidden="true">#</a> subprocess.stderr</h3><p>\u4EE3\u8868\u5B50\u8FDB\u7A0B\u7684 stderr \u7684 Readable Stream\u3002</p><p><code>subprocess.stderr.on(&#39;data&#39;)</code> \u53EF\u76D1\u542C\u5B50\u8FDB\u7A0B\u7684\u9519\u8BEF\u8F93\u51FA\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>subprocess<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Received error chunk </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="subprocess-stdout" tabindex="-1"><a class="header-anchor" href="#subprocess-stdout" aria-hidden="true">#</a> subprocess.stdout</h3><p>\u4EE3\u8868\u5B50\u8FDB\u7A0B\u7684 stdout \u7684 Readable Stream\u3002</p><p><code>subprocess.stdout.on(&#39;data&#39;)</code> \u53EF\u76D1\u542C\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u51FA\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>subprocess<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Received chunk </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h2><h3 id="\u8FD0\u884C-ls-lh-usr\u3001\u6355\u83B7-stdout\u3001stderr-\u548C\u9000\u51FA\u7801" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u884C-ls-lh-usr\u3001\u6355\u83B7-stdout\u3001stderr-\u548C\u9000\u51FA\u7801" aria-hidden="true">#</a> \u8FD0\u884C ls -lh /usr\u3001\u6355\u83B7 stdout\u3001stderr \u548C\u9000\u51FA\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;child_process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ls <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&quot;ls&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;-lh&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/usr&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stdout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stderr: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">child process exited with code </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,45),r={href:"http://nodejs.cn/api/child_process.html",target:"_blank",rel:"noopener noreferrer"},d=c("child_process");function k(m,v){const s=i("ExternalLinkIcon");return t(),p("div",null,[u,n("p",null,[n("a",r,[d,e(s)])])])}const b=a(l,[["render",k],["__file","child_process\u5B50\u8FDB\u7A0B.html.vue"]]);export{b as default};
