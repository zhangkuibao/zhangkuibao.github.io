import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as e}from"./app.17eb5f9b.js";const t={},p=e(`<h2 id="promise-\u4F7F\u7528\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#promise-\u4F7F\u7528\u65B9\u5F0F" aria-hidden="true">#</a> Promise \u4F7F\u7528\u65B9\u5F0F</h2><h3 id="\u7ED9-resolve-\u4F20\u5165\u975E\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u7ED9-resolve-\u4F20\u5165\u975E\u5BF9\u8C61" aria-hidden="true">#</a> \u7ED9 resolve \u4F20\u5165\u975E\u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED9-resolve-\u4F20\u4E00\u4E2A\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u7ED9-resolve-\u4F20\u4E00\u4E2A\u5BF9\u8C61" aria-hidden="true">#</a> \u7ED9 resolve \u4F20\u4E00\u4E2A\u5BF9\u8C61</h3><p>\u5982\u679C\u5BF9\u8C61\u4E2D\u6709 <code>then</code> \u5C5E\u6027\u4E14\u503C\u4E3A\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;promise&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">res</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">rej</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-\u5DE5\u4F5C\u539F\u7406\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#promise-\u5DE5\u4F5C\u539F\u7406\u89E3\u6790" aria-hidden="true">#</a> Promise \u5DE5\u4F5C\u539F\u7406\u89E3\u6790</h2><h3 id="\u5185\u90E8\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8\u5C5E\u6027" aria-hidden="true">#</a> \u5185\u90E8\u5C5E\u6027</h3><p>\u5728 <code>Promise</code> \u5185\u90E8\u6709\u4E00\u4E9B\u5C5E\u6027\uFF0C\u8FD9\u4E9B\u5C5E\u6027\u5BF9\u5916\u4E0D\u53EF\u89C1\uFF0C\u7528\u4E8E\u8DDF\u8E2A\u8BB0\u5F55 <code>Promise</code> \u7684\u72B6\u6001</p><ul><li><p><code>[[PromiseState]]</code> \u8868\u793A <code>Promise</code> \u7684\u72B6\u6001\uFF0C\u5305\u62EC\uFF1A<code>pending</code>\uFF0C<code>fulfilled</code> \u548C <code>rejected</code>\uFF0C\u63A7\u5236 <code>Promise</code> \u5BF9\u5176 <code>then</code> \u65B9\u6CD5\u7684\u4F20\u5165\u8C03\u7528\u505A\u4F55\u53CD\u5E94</p></li><li><p><code>[[PromiseResult]]</code> \u8868\u793A <code>Promise</code> \u7684\u72B6\u6001\u662F\u5426\u8F6C\u4E3A\u5DF2\u5B8C\u6210\u3002\u53EA\u6709\u5728<code>[[PromiseState]]</code> \u4E0D\u662F <code>pending</code> \u65F6\u624D\u6709\u610F\u4E49</p></li><li><p><code>[[PromiseFulfillReactions]]</code> \u6570\u7EC4\uFF0C\u8C03\u7528 then \u65F6\u5982\u679C promise \u7684\u72B6\u6001\u8FD8\u662F padding \u5C31\u628A resolve \u5904\u7406\u7A0B\u5E8F\u6DFB\u52A0\u5230\u8FD9\u4E2A\u6570\u7EC4</p></li><li><p><code>[[PromiseRejectReactions]]</code> \u6570\u7EC4\uFF0C\u8C03\u7528 then \u65F6\u5982\u679C promise \u7684\u72B6\u6001\u8FD8\u662F padding \u5C31\u628A reject \u5904\u7406\u7A0B\u5E8F\u6DFB\u52A0\u5230\u8FD9\u4E2A\u6570\u7EC4</p></li><li><p><code>[[PromiseIsHandled]]</code> \u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A <code>Promise</code> \u662F\u5426\u66FE\u7ECF\u6709\u4E00\u4E2A\u5C65\u884C\u6216\u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F\uFF1B\u7528\u4E8E\u672A\u5904\u7406\u7684\u62D2\u7EDD\u8DDF\u8E2A\u3002</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> PledgeSymbol <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;PledgeState&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">result</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;PledgeResult&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isHandled</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;PledgeIsHandled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fulfillReactions</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;PledgeFulfillReactions&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rejectReactions</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;PledgeRejectReactions&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Pledge</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>state<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>isHandled<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>fulfillReactions<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>rejectReactions<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reject-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#reject-\u51FD\u6570" aria-hidden="true">#</a> reject() \u51FD\u6570</h3><p>reject \u51FD\u6570\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\uFF0C\u5E76\u5C06\u627F\u8BFA\u6539\u4E3A rejected \u72B6\u6001\uFF0Creject \u4E4B\u540E\u53EF\u4EE5\u7528 then \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u6216 catch \u6355\u83B7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">rejectPledge</span><span class="token punctuation">(</span><span class="token parameter">pledge<span class="token punctuation">,</span> reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>state<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Pledge is already settled.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> reactions <span class="token operator">=</span> pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>rejectReactions<span class="token punctuation">]</span><span class="token punctuation">;</span>

  pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> reason<span class="token punctuation">;</span>
  pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>fulfillReactions<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>rejectReactions<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>state<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;rejected&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>isHandled<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// TODO: perform HostPromiseRejectionTracker(promise, &quot;reject&quot;).</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// TODO: Return \`TriggerPromiseReactions(reactions, reason)\`.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="resolve-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#resolve-\u51FD\u6570" aria-hidden="true">#</a> resolve() \u51FD\u6570</h3><p>resolve \u51FD\u6570\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\uFF0C\u5E76\u5C06\u627F\u8BFA\u6539\u4E3A fulfilled \u72B6\u6001\uFF0Cresolve \u4E4B\u540E\u53EF\u4EE5\u7528 then \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570</p><p>resolve \u5904\u7406\u4E0D\u540C\u7C7B\u578B\u503C\u7684\u65B9\u5F0F\uFF1A 1. \u53C2\u6570\u4E3A\u672C\u8EAB promise \u5219\u629B\u51FA\u9519\u8BEF\u3002 2. \u53C2\u6570\u4E3A\u5176\u4ED6 promise \u5219\u7B49\u5F85 promise \u5B8C\u6210\uFF0C\u4F7F\u7528\u53E6\u4E00\u4E2A\u627F\u8BFA\u8C03\u7528 resolve \u610F\u5473\u7740\u5728\u7B2C\u4E8C\u4E2A\u627F\u8BFA\u88AB\u89E3\u51B3\u4E4B\u524D\uFF0C\u7B2C\u4E00\u4E2A\u627F\u8BFA\u4E0D\u80FD\u88AB\u89E3\u51B3\u3002 3. \u53C2\u6570\u4E3A\u975E\u5BF9\u8C61\u5219\u4F7F\u7528\u8BE5\u503C\u3002 4. \u53C2\u6570\u4E3A\u5177\u6709 then \u5C5E\u6027\u7684\u5BF9\u8C61\uFF1A 1. \u5982\u679C\u8BE5 then \u5C5E\u6027\u4E0D\u662F\u65B9\u6CD5\uFF0C\u5219\u4F7F\u7528\u8BE5\u5BF9\u8C61\u3002 2. \u5982\u679C\u8BE5 then \u5C5E\u6027\u662F\u65B9\u6CD5\uFF0C\u5219\u8BE5 then \u65B9\u6CD5\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF0C\u7528\u4E8E\u5C06 promise \u7684\u72B6\u6001\u4FEE\u6539\u4E3A fulfilled \u6216 rejected\u3002</p><h3 id="\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570</h3><p><code>Promise</code> \u5728\u521B\u5EFA\u65F6\u7ACB\u5373\u6267\u884C</p><p><code>Promise</code> \u7684\u6784\u9020\u51FD\u6570\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BE5\u51FD\u6570\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u8FD9\u4E24\u4E2A\u53C2\u6570\u88AB\u901A\u5E38\u88AB\u547D\u540D\u4E3A <code>resolve</code> \u548C <code>reject</code>\uFF0C\u7528\u4E8E\u4FEE\u6539 <code>Promise</code> \u7684\u72B6\u6001\uFF1B\u8FD9\u4E24\u4E2A\u51FD\u6570\u90FD\u53EF\u4EE5\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\u4F20\u9012\u7ED9 <code>Promise</code> \u7684 <code>then</code> \u6216 <code>catch</code> \u51FD\u6570</p><p><code>resolve</code> \u5C06 <code>Promise</code> \u7684\u72B6\u6001\u4ECE <code>padding</code> \u8F6C\u53D8\u4E3A <code>fulfilled</code></p><p><code>reject</code> \u5C06 <code>Promise</code> \u7684\u72B6\u6001\u4ECE <code>padding</code> \u8F6C\u53D8\u4E3A <code>rejected</code></p><h3 id="then-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#then-\u65B9\u6CD5" aria-hidden="true">#</a> then() \u65B9\u6CD5</h3><p>then() \u65B9\u6CD5\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u4E3A promise \u6267\u884C resolve() \u7684\u5904\u7406\u7A0B\u5E8F\u548C \u6267\u884C reject() \u7684\u5904\u7406\u7A0B\u5E8F\uFF0C\u8BE5\u51FD\u6570\u88AB\u8C03\u7528\u4EE5\u54CD\u5E94 promise \u5185\u90E8\u72B6\u6001\u7684\u53D8\u5316\u3002\u8FD9\u4E24\u4E2A\u53C2\u6570\u90FD\u53EF\u4EE5\u8BBE\u7F6E\u4E3A undefined \u8868\u793A\u4E0D\u9700\u8981\u67D0\u4E2A\u6267\u884C\u7A0B\u5E8F\u3002</p><p>then() \u59CB\u7EC8\u8FD4\u56DE\u53E6\u4E00\u4E2A promise</p><p>then \u65B9\u6CD5\u8C03\u7528\u65F6\u91C7\u53D6\u7684\u6B65\u9AA4\u53D6\u51B3\u4E8E\u627F\u8BFA\u7684\u72B6\u6001\uFF1A</p><ul><li><p>\u5982\u679C promise \u7684\u72B6\u6001\u4E3A pending\uFF08promise \u672A\u89E3\u51B3\uFF09\uFF0Cthen() \u53EA\u9700\u5B58\u50A8\u7A0D\u540E\u8981\u8C03\u7528\u7684\u5904\u7406\u7A0B\u5E8F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">case</span> <span class="token string">&quot;pending&quot;</span><span class="token operator">:</span> <span class="token comment">// \u591A\u4E2A then \u94FE\u5F0F\u8C03\u7528\u65F6\u5982\u679C promise \u72B6\u6001\u4E3A pending \u4F1A\u5C06\u5904\u7406\u7A0B\u5E8F\u5168\u90E8\u63A8\u5165\u961F\u5217\u4E2D</span>
  pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>fulfillReactions<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fulfillReaction<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// fulfillReaction \u548C rejectReaction \u59CB\u7EC8\u6709\u503C\uFF0C\u5373\u4F7F\u6CA1\u6709\u5BF9\u5E94\u7684\u5904\u7406\u7A0B\u5E8F</span>
  pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>rejectReactions<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rejectReaction<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 promise \u72B6\u6001\u6539\u53D8\u540E\u5C06\u961F\u5217\u4E2D\u7684\u5904\u7406\u7A0B\u5E8F\u904D\u5386\u6DFB\u52A0\u5230\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\uFF0C\u6CE8\u610F\u662F\u5C06\u672C promise \u7684\u6240\u6709 then \u65B9\u6CD5\u6DFB\u52A0\u7684\u5904\u7406\u7A0B\u5E8F\u5168\u90E8\u6DFB\u52A0\u5230\u5FAE\u4EFB\u52A1\u961F\u5217</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> reaction <span class="token keyword">of</span> reactions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> job <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PledgeReactionJob</span><span class="token punctuation">(</span>reaction<span class="token punctuation">,</span> argument<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// PledgeReactionJob \u6784\u9020\u51FD\u6570\u7528\u6765\u5305\u88C5\u5904\u7406\u7A0B\u5E8F</span>
  <span class="token function">hostEnqueuePledgeJob</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5982\u679C\u627F\u8BFA\u7684\u72B6\u6001\u5DF2\u5B8C\u6210\uFF0C\u5219 then()\u7ACB\u5373\u5C06\u4F5C\u4E1A\u6392\u961F\u4EE5\u6267\u884C\u5B8C\u6210\u5904\u7406\u7A0B\u5E8F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">case</span> <span class="token string">&quot;fulfilled&quot;</span><span class="token operator">:</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>result<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> fulfillJob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PledgeReactionJob</span><span class="token punctuation">(</span>fulfillReaction<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">queueMicrotask</span><span class="token punctuation">(</span>fulfillJob<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// \u521B\u5EFA\u5FAE\u4EFB\u52A1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5982\u679C\u627F\u8BFA\u7684\u72B6\u6001\u88AB\u62D2\u7EDD\uFF0C\u5219 then()\u7ACB\u5373\u5C06\u4F5C\u4E1A\u6392\u961F\u4EE5\u6267\u884C\u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">case</span> <span class="token string">&quot;rejected&quot;</span><span class="token operator">:</span>
  <span class="token keyword">const</span> reason <span class="token operator">=</span> pledge<span class="token punctuation">[</span>PledgeSymbol<span class="token punctuation">.</span>result<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> rejectJob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PledgeReactionJob</span><span class="token punctuation">(</span>rejectReaction<span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// TODO: if [[isHandled]] if false</span>
  <span class="token function">queueMicrotask</span><span class="token punctuation">(</span>rejectJob<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">break</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="catch-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#catch-\u65B9\u6CD5" aria-hidden="true">#</a> catch() \u65B9\u6CD5</h3><p>catch() \u6240\u505A\u7684\u5C31\u662F\u4EE5\u4E00\u53C2\u4E3A undefined\uFF0C\u4E8C\u53C2\u4E3A reject \u7684\u5904\u7406\u7A0B\u5E8F\u6765\u8C03\u7528 then()</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">catch</span><span class="token punctuation">(</span>onRejected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h2><h3 id="\u591A\u4E2A-then-\u65F6\u6DFB\u52A0\u5FAE\u4EFB\u52A1\u961F\u5217\u7684\u987A\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u591A\u4E2A-then-\u65F6\u6DFB\u52A0\u5FAE\u4EFB\u52A1\u961F\u5217\u7684\u987A\u5E8F" aria-hidden="true">#</a> \u591A\u4E2A then \u65F6\u6DFB\u52A0\u5FAE\u4EFB\u52A1\u961F\u5217\u7684\u987A\u5E8F</h3><p>\u7B2C\u4E00\u4E2A Promise \u7684\u7B2C\u4E8C\u4E2A then \u4E2D\u8FD4\u56DE\u4E86\u4E00\u4E2A Promise.resolve()\uFF0C\u6253\u5370\u987A\u5E8F\u4E3A <code>1 5 2 6 7 8 3 4</code></p><p>\u53BB\u6389\u8FD9\u4E2A Promise.resolve() \u7684\u8BDD\u6253\u5370\u987A\u5E8F\u4E3A <code>1 5 2 6 3 7 4 8</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1 5 2 6 7 8 3 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="finally-\u65B9\u6CD5\u53EF\u4EE5\u6709\u591A\u4E2A" tabindex="-1"><a class="header-anchor" href="#finally-\u65B9\u6CD5\u53EF\u4EE5\u6709\u591A\u4E2A" aria-hidden="true">#</a> finally() \u65B9\u6CD5\u53EF\u4EE5\u6709\u591A\u4E2A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;finally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;finally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","promise\u662F\u5982\u4F55\u5DE5\u4F5C\u7684.html.vue"]]);export{d as default};
