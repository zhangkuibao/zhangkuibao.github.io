import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as t,a as n,e,f as o,g as c,h as i}from"./app.17eb5f9b.js";const u={},l=o(`<p>\u672C\u6587\u6240\u7528 axios \u7248\u672C\u53F7\u4E3A\uFF1A<code>1.3.2</code>\u3002</p><h2 id="axios-\u62E6\u622A\u5668\u7684\u914D\u7F6E\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#axios-\u62E6\u622A\u5668\u7684\u914D\u7F6E\u65B9\u5F0F" aria-hidden="true">#</a> axios \u62E6\u622A\u5668\u7684\u914D\u7F6E\u65B9\u5F0F</h2><p>axios \u4E2D\u6709\u4E24\u79CD\u62E6\u622A\u5668\uFF1A</p><ul><li><code>axios.interceptors.request.use(onFulfilled, onRejected, options)</code>\uFF1A\u914D\u7F6E\u8BF7\u6C42\u62E6\u622A\u5668\u3002 <ul><li>onFulfilled \u65B9\u6CD5\u5728\u53D1\u9001\u8BF7\u6C42\u524D\u6267\u884C\uFF0C\u63A5\u6536 config \u5BF9\u8C61\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 config \u5BF9\u8C61\uFF0C\u53EF\u5728\u6B64\u65B9\u6CD5\u5185\u4FEE\u6539 config \u5BF9\u8C61\u3002</li><li>onRejected \u65B9\u6CD5\u5728 onFulfilled \u6267\u884C\u9519\u8BEF\u540E\u6267\u884C\uFF0C\u63A5\u6536 onFulfilled \u6267\u884C\u540E\u7684\u9519\u8BEF\u5BF9\u8C61\u3002</li><li>options \u914D\u7F6E\u53C2\u6570 <ul><li>synchronous\uFF1A\u63A7\u5236<strong>\u8BF7\u6C42\u62E6\u622A\u5668</strong>\u662F\u5426\u4E3A\u5F02\u6B65\u6267\u884C\uFF0C\u9ED8\u8BA4\u4E3A true\uFF0C\u6BCF\u4E2A\u62E6\u622A\u5668\u90FD\u53EF\u4EE5\u5355\u72EC\u8BBE\u7F6E\uFF0C\u53EA\u8981\u6709\u4E00\u4E2A\u8BBE\u7F6E\u4E3A false \u5219\u4E3A\u540C\u6B65\u6267\u884C\uFF0C\u5426\u5219\u4E3A\u5F02\u6B65\u6267\u884C\u3002</li><li>runWhen\uFF1A\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u63A5\u6536 config \u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5728\u6BCF\u6B21\u8C03\u7528\u8BBE\u5B9A\u7684\u62E6\u622A\u5668\u65B9\u6CD5\u524D\u8C03\u7528\uFF0C\u8FD4\u56DE\u7ED3\u679C\u4E3A true \u65F6\u6267\u884C\u62E6\u622A\u5668\u65B9\u6CD5\u3002</li></ul></li></ul></li><li><code>axios.interceptors.response.use(onFulfilled, onRejected, options)</code>\uFF1A\u914D\u7F6E\u54CD\u5E94\u62E6\u622A\u5668\u3002 <ul><li>onFulfilled \u65B9\u6CD5\u5728\u8FD4\u56DE\u54CD\u5E94\u7ED3\u679C\u524D\u8C03\u7528\uFF0C\u63A5\u6536\u54CD\u5E94\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u54CD\u5E94\u5BF9\u8C61\uFF0C\u53EF\u5728\u6B64\u65B9\u6CD5\u5185\u4FEE\u6539\u54CD\u5E94\u5BF9\u8C61\u3002</li><li>onRejected \u4E0E options \u540C <code>axios.interceptors.request.use</code>\u3002</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> config<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u6DFB\u52A0\u591A\u4E2A\u62E6\u622A\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;999&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> config<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;888&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> config<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.baidwwu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 2  Error: 888</span>
<span class="token comment">// 1  Error: 888</span>
<span class="token comment">// 3  Error: 888</span>
<span class="token comment">// 4  Error: 888</span>
<span class="token comment">// 5  Error: 888</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5148\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\uFF0C\u540E\u6267\u884C\u54CD\u5E94\u62E6\u622A\u5668\u3002</p><ul><li><p>\u8BBE\u7F6E\u591A\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\u7684\u60C5\u51B5\uFF1A\u540E\u6DFB\u52A0\u7684\u62E6\u622A\u5668\u5148\u6267\u884C\u3002</p></li><li><p>\u8BBE\u7F6E\u591A\u4E2A\u54CD\u5E94\u62E6\u622A\u5668\u7684\u60C5\u51B5\uFF1A\u6309\u7167\u8BBE\u7F6E\u987A\u5E8F\u6267\u884C\u3002</p></li></ul><h2 id="use-\u65B9\u6CD5\u7684\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#use-\u65B9\u6CD5\u7684\u5B9A\u4E49" aria-hidden="true">#</a> use() \u65B9\u6CD5\u7684\u5B9A\u4E49</h2><p>\u5148\u6765\u770B use() \u65B9\u6CD5\u76F8\u5173\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>interceptors <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">request</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InterceptorManager</span><span class="token function">$1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InterceptorManager</span><span class="token function">$1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> InterceptorManager <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">InterceptorManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>handlers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
  <span class="token comment">// _createClass \u65B9\u6CD5\u53EF\u4EE5\u7ED9\u5BF9\u8C61\u7684\u539F\u578B\u4E0A\u6DFB\u52A0\u5C5E\u6027</span>
  <span class="token function">_createClass</span><span class="token punctuation">(</span>InterceptorManager<span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;use&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">fulfilled<span class="token punctuation">,</span> rejected<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">fulfilled</span><span class="token operator">:</span> fulfilled<span class="token punctuation">,</span>
          <span class="token literal-property property">rejected</span><span class="token operator">:</span> rejected<span class="token punctuation">,</span>
          <span class="token literal-property property">synchronous</span><span class="token operator">:</span> options <span class="token operator">?</span> options<span class="token punctuation">.</span>synchronous <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
          <span class="token literal-property property">runWhen</span><span class="token operator">:</span> options <span class="token operator">?</span> options<span class="token punctuation">.</span>runWhen <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;forEach&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">forEachHandler</span><span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">fn</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> InterceptorManager<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> InterceptorManager$1 <span class="token operator">=</span> InterceptorManager<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230 <code>interceptors.request</code> \u548C <code>interceptors.response</code> \u5404\u81EA\u6307\u5411 <code>InterceptorManager</code> \u7684\u5B9E\u4F8B\u3002</p><p><code>InterceptorManager</code> \u539F\u578B\u4E0A\u8BBE\u7F6E\u4E86 <code>use()</code> \u65B9\u6CD5\uFF0C\u6267\u884C\u540E\u7ED9\u5F85\u6267\u884C\u961F\u5217 <code>this.handlers</code> \u4E2D\u6DFB\u52A0\u4E00\u6761\u6570\u636E\u3002</p><p>\u8FD9\u91CC\u5229\u7528\u4E86 <code>this</code> \u7684\u7279\u6027\u6765\u533A\u5206\u4F5C\u7528\u57DF\uFF1A\u8C01\u8C03\u7528 <code>use()</code> \u65B9\u6CD5\u5C31\u7ED9\u8C01\u7684 <code>handlers</code> \u4E2D\u6DFB\u52A0\u6570\u636E\u3002\u5728\u8C03\u7528 <code>use()</code> \u65B9\u6CD5\u4E4B\u540E\uFF0C\u5DF2\u7ECF\u5C06\u56DE\u8C03\u51FD\u6570\u6309\u987A\u5E8F\u6DFB\u52A0\u5230\u4E86 <code>handlers</code> \u6570\u7EC4\u4E2D\u3002</p><p><code>forEach()</code> \u65B9\u6CD5\u7528\u6765\u904D\u5386\u5F53\u524D\u4F5C\u7528\u57DF <code>handlers</code> \u4E2D\u4E0D\u4E3A <code>null</code> \u7684\u5143\u7D20\uFF0C\u5728\u6267\u884C\u62E6\u622A\u5668\u65F6\u6709\u7528\u5230\uFF0C\u8BE6\u60C5\u89C1\u4E0B\u6587\u3002</p><h2 id="\u62E6\u622A\u5668\u5982\u4F55\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u62E6\u622A\u5668\u5982\u4F55\u6267\u884C" aria-hidden="true">#</a> \u62E6\u622A\u5668\u5982\u4F55\u6267\u884C</h2><p>\u62E6\u622A\u5668\u662F\u5728\u8C03\u7528\u4E86 <code>request()</code> \u65B9\u6CD5\u524D\u540E\u6267\u884C\u7684\uFF0C\u5148\u770B\u76F8\u5173\u6E90\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Axios <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">_createClass</span><span class="token punctuation">(</span>Axios<span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">configOrUrl<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token comment">// \u521D\u59CB\u5316\u8BF7\u6C42\u62E6\u622A\u5668</span>
        <span class="token keyword">var</span> requestInterceptorChain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> synchronousRequestInterceptors <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">unshiftRequestInterceptors</span><span class="token punctuation">(</span>
          <span class="token parameter">interceptor</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>
            <span class="token keyword">typeof</span> interceptor<span class="token punctuation">.</span>runWhen <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">&amp;&amp;</span>
            interceptor<span class="token punctuation">.</span><span class="token function">runWhen</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span>
          <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          synchronousRequestInterceptors <span class="token operator">=</span>
            synchronousRequestInterceptors <span class="token operator">&amp;&amp;</span> interceptor<span class="token punctuation">.</span>synchronous<span class="token punctuation">;</span>
          requestInterceptorChain<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>
            interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span>
            interceptor<span class="token punctuation">.</span>rejected
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521D\u59CB\u5316\u54CD\u5E94\u62E6\u622A\u5668</span>
        <span class="token keyword">var</span> responseInterceptorChain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">pushResponseInterceptors</span><span class="token punctuation">(</span>
          <span class="token parameter">interceptor</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          responseInterceptorChain<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
            interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span>
            interceptor<span class="token punctuation">.</span>rejected
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> promise<span class="token punctuation">;</span>
        <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> len<span class="token punctuation">;</span>
        <span class="token comment">// \u8BF7\u6C42\u62E6\u622A\u5668\u540C\u6B65\u6267\u884C\u6A21\u5F0F</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>synchronousRequestInterceptors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">var</span> chain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">dispatchRequest</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          chain<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> requestInterceptorChain<span class="token punctuation">)</span><span class="token punctuation">;</span>
          chain<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> responseInterceptorChain<span class="token punctuation">)</span><span class="token punctuation">;</span>
          len <span class="token operator">=</span> chain<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
          promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> chain<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>chain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>chain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span> promise<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u8BF7\u6C42\u62E6\u622A\u5668\u5F02\u6B65\u6267\u884C\u6A21\u5F0F</span>
        len <span class="token operator">=</span> requestInterceptorChain<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">var</span> newConfig <span class="token operator">=</span> config<span class="token punctuation">;</span>
        i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">var</span> onFulfilled <span class="token operator">=</span> requestInterceptorChain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">var</span> onRejected <span class="token operator">=</span> requestInterceptorChain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            newConfig <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span>newConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">onRejected</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          promise <span class="token operator">=</span> <span class="token function">dispatchRequest</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        len <span class="token operator">=</span> responseInterceptorChain<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
            responseInterceptorChain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            responseInterceptorChain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> promise<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u662F\u76F8\u5173\u7684\u5168\u90E8\u4EE3\u7801\uFF0C\u4E0B\u9762\u8FDB\u884C\u5206\u89E3\u3002</p><h3 id="\u62E6\u622A\u5668\u56DE\u8C03\u65B9\u6CD5\u7684\u6DFB\u52A0\u987A\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u62E6\u622A\u5668\u56DE\u8C03\u65B9\u6CD5\u7684\u6DFB\u52A0\u987A\u5E8F" aria-hidden="true">#</a> \u62E6\u622A\u5668\u56DE\u8C03\u65B9\u6CD5\u7684\u6DFB\u52A0\u987A\u5E8F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> requestInterceptorChain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6C42\u62E6\u622A\u5668\u6267\u884C\u94FE</span>
<span class="token comment">// \u662F\u5426\u540C\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\uFF0C\u6BCF\u4E2A\u62E6\u622A\u5668\u90FD\u53EF\u4EE5\u5355\u72EC\u8BBE\u7F6E\uFF0C\u4F46\u662F\u53EA\u6709\u6240\u6709\u62E6\u622A\u5668\u90FD\u8BBE\u7F6E\u4E3Atrue\u624D\u4E3Atrue</span>
<span class="token keyword">var</span> synchronousRequestInterceptors <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">unshiftRequestInterceptors</span><span class="token punctuation">(</span>
  <span class="token parameter">interceptor</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4F20\u5165 runWhen() \u65B9\u6CD5\u65F6\uFF0C\u5982\u679C runWhen() \u65B9\u6CD5\u8FD4\u56DE\u503C\u4E3A false \u5219\u5FFD\u7565\u8FD9\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token keyword">typeof</span> interceptor<span class="token punctuation">.</span>runWhen <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">&amp;&amp;</span>
    interceptor<span class="token punctuation">.</span><span class="token function">runWhen</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u662F\u5426\u540C\u6B65\u6267\u884C</span>
  synchronousRequestInterceptors <span class="token operator">=</span>
    synchronousRequestInterceptors <span class="token operator">&amp;&amp;</span> interceptor<span class="token punctuation">.</span>synchronous<span class="token punctuation">;</span>
  <span class="token comment">// \u7528 unshift() \u6DFB\u52A0\u6570\u636E\uFF0C\u540E\u8BBE\u7F6E\u7684\u62E6\u622A\u5668\u5728\u524D</span>
  requestInterceptorChain<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span> interceptor<span class="token punctuation">.</span>rejected<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> responseInterceptorChain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u54CD\u5E94\u62E6\u622A\u5668\u6267\u884C\u94FE</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">pushResponseInterceptors</span><span class="token punctuation">(</span>
  <span class="token parameter">interceptor</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u54CD\u5E94\u62E6\u622A\u5668\u6309\u987A\u5E8F\u52A0\u5728\u540E\u9762</span>
  responseInterceptorChain<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span> interceptor<span class="token punctuation">.</span>rejected<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>interceptors.request.forEach()</code> \u7684\u5B9A\u4E49\u5728\u4E0A\u6587\u63D0\u5230\u8FC7\uFF0C\u5C01\u88C5\u4E3A\u904D\u5386\u81EA\u8EAB\u7684 <code>handlers</code> \u6570\u7EC4\uFF0C\u4E0E\u6570\u7EC4\u7684 <code>forEach</code> \u7C7B\u4F3C\uFF0C\u53EA\u662F\u8FC7\u6EE4\u4E86\u503C\u4E3A <code>null</code> \u7684\u5143\u7D20\u3002</p><p><code>runWhen()</code> \u65B9\u6CD5\u63A5\u6536 config\uFF0C\u8FD4\u56DE boolean\uFF0C\u63A7\u5236\u662F\u5426\u5C06\u5F53\u524D\u62E6\u622A\u5668\u7684\u56DE\u8C03\u51FD\u6570\u6DFB\u52A0\u5230\u6267\u884C\u94FE\u4E2D\u3002</p><p>\u8BF7\u6C42\u62E6\u622A\u5668\u7528 <code>unshift()</code> \u65B9\u6CD5\u6DFB\u52A0\uFF0C\u6240\u4EE5\u540E\u8BBE\u7F6E\u7684\u5148\u6267\u884C\uFF0C\u54CD\u5E94\u62E6\u622A\u5668\u7528 <code>push()</code> \u65B9\u6CD5\u6DFB\u52A0\uFF0C\u6240\u4EE5\u6309\u7167\u8BBE\u7F6E\u987A\u5E8F\u6267\u884C\u3002</p><p>\u53EA\u8981\u6709\u4E00\u4E2A\u62E6\u622A\u5668\u7684 <code>synchronous</code> \u8BBE\u7F6E\u4E3A <code>false</code>\uFF0C\u5219 <code>synchronousRequestInterceptors</code> \u7684\u503C\u4E3A <code>false</code>\u3002</p><h3 id="\u540C\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668-\u987A\u5E8F\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u540C\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668-\u987A\u5E8F\u6267\u884C" aria-hidden="true">#</a> \u540C\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\uFF08\u987A\u5E8F\u6267\u884C\uFF09</h3><p><code>synchronousRequestInterceptors</code> \u4E3A <code>false</code> \u65F6\u4E3A\u540C\u6B65\u6267\u884C\uFF0C\u76F8\u5173\u903B\u8F91\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> promise<span class="token punctuation">;</span>
<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> len<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>synchronousRequestInterceptors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> chain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">dispatchRequest</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u94FE</span>
  chain<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> requestInterceptorChain<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u8BF7\u6C42\u62E6\u622A\u5668\u6DFB\u52A0\u5230\u8BF7\u6C42\u4E4B\u524D</span>
  chain<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> responseInterceptorChain<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u54CD\u5E94\u62E6\u622A\u5668\u6DFB\u52A0\u5230\u54CD\u5E94\u4E4B\u540E</span>
  len <span class="token operator">=</span> chain<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>chain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> chain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528 Promise \u5305\u88C5\u6267\u884C\u94FE</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> promise<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>dispatchRequest()</code> \u662F\u53D1\u9001\u8BF7\u6C42\u7684\u65B9\u6CD5\u3002</p><p>\u540C\u6B65\u6267\u884C\u6A21\u5F0F\u4E0B\uFF0C\u4F1A\u5C06\u6267\u884C\u94FE\u4E2D\u7684\u6240\u6709\u65B9\u6CD5\u7528 Promise \u8FDB\u884C\u5C01\u88C5\uFF0C\u524D\u4E00\u4E2A\u65B9\u6CD5\u6267\u884C\u5B8C\u6BD5\u540E\u5C06\u5176\u8FD4\u56DE\u503C\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u7ED9\u4E0B\u4E00\u4E2A\u65B9\u6CD5\u3002</p><p>\u8FD9\u91CC\u7684 <code>chain</code> \u5176\u5B9E\u5C31\u662F\u6240\u6709\u62E6\u622A\u5668\u65B9\u6CD5\u4E0E\u8BF7\u6C42\u65B9\u6CD5\u5408\u5E76\u800C\u6210\u7684\u6267\u884C\u94FE\uFF0C\u7B49\u4EF7\u4E8E\uFF1A <code>[...requestInterceptorChain, dispatchRequest.bind(this), ...responseInterceptorChain]</code>\u3002</p><p>\u4ECE\u4E00\u4E2A\u4F8B\u5B50\u6765\u770B <code>chain</code> \u7684\u6210\u5458\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>onFulfilled1<span class="token punctuation">,</span> onRejected1<span class="token punctuation">)</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>onFulfilled2<span class="token punctuation">,</span> onRejected2<span class="token punctuation">)</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>onFulfilled3<span class="token punctuation">,</span> onRejected3<span class="token punctuation">)</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>onFulfilled4<span class="token punctuation">,</span> onRejected4<span class="token punctuation">)</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// chain: [onFulfilled2, onRejected2, onFulfilled1, onRejected1, dispatchRequest, onFulfilled3, onRejected3, onFulfilled4, onRejected4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u6784\u5EFA Promise \u94FE\u7684\u65F6\u5019\uFF0C\u4E00\u6B21\u904D\u5386\u4E2D\u53D6\u4E86\u4E24\u4E2A\u65B9\u6CD5\u4F20\u9012\u7ED9 then()\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>chain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> chain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7528 Promise \u5305\u88C5\u6267\u884C\u94FE</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> promise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F02\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668-\u540C\u65F6\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668-\u540C\u65F6\u6267\u884C" aria-hidden="true">#</a> \u5F02\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\uFF08\u540C\u65F6\u6267\u884C\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> promise<span class="token punctuation">;</span>
<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> len <span class="token operator">=</span> requestInterceptorChain<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// \u8BF7\u6C42\u6267\u884C\u94FE\u7684\u957F\u5EA6</span>
<span class="token keyword">var</span> newConfig <span class="token operator">=</span> config<span class="token punctuation">;</span>
i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">// \u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\u56DE\u8C03</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> onFulfilled <span class="token operator">=</span> requestInterceptorChain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// use() \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570</span>
  <span class="token keyword">var</span> onRejected <span class="token operator">=</span> requestInterceptorChain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// use() \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570</span>
  <span class="token comment">// \u6267\u884C\u6210\u529F\u540E\u7EE7\u7EED\u6267\u884C\uFF0C\u6267\u884C\u5931\u8D25\u540E\u505C\u6B62\u6267\u884C\u3002</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    newConfig <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span>newConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">onRejected</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6267\u884C\u53D1\u9001\u8BF7\u6C42\u65B9\u6CD5</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  promise <span class="token operator">=</span> <span class="token function">dispatchRequest</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u5931\u8D25\u540E\u9000\u51FA</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6267\u884C\u54CD\u5E94\u62E6\u622A\u5668\u56DE\u8C03</span>
i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
len <span class="token operator">=</span> responseInterceptorChain<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    responseInterceptorChain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// use() \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570</span>
    responseInterceptorChain<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token comment">// use() \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> promise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>dispatchRequest()</code> \u662F\u53D1\u9001\u8BF7\u6C42\u7684\u65B9\u6CD5\u3002</p><p>\u7528 <code>while</code> \u5FAA\u73AF\u904D\u5386\u6240\u6709\u7684\u8BF7\u6C42\u62E6\u622A\u5668\u5E76\u8C03\u7528\uFF0C\u5C06\u6267\u884C\u8BED\u53E5\u5305\u88F9\u5728 <code>try-catch</code> \u8BED\u53E5\u4E2D\uFF0C\u53EA\u8981\u6709\u4E00\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\u5F02\u5E38\u5C31\u505C\u6B62\u5FAA\u73AF\u3002</p><p>\u53EF\u4EE5\u770B\u5230\u5728\u5F02\u6B65\u6A21\u5F0F\u4E0B\uFF0C\u8BF7\u6C42\u62E6\u622A\u5668\u4E3A\u5F02\u6B65\u6267\u884C\uFF0C\u4F46\u662F\u4E0D\u5F71\u54CD\u53D1\u9001\u8BF7\u6C42\uFF0C\u800C\u54CD\u5E94\u62E6\u622A\u5668\u8FD8\u662F\u5728\u8BF7\u6C42\u54CD\u5E94\u540E\u540C\u6B65\u6267\u884C\u3002</p><h2 id="q-a" tabindex="-1"><a class="header-anchor" href="#q-a" aria-hidden="true">#</a> Q&amp;A</h2><h3 id="\u62E6\u622A\u5668\u662F\u5982\u4F55\u5DE5\u4F5C\u7684" tabindex="-1"><a class="header-anchor" href="#\u62E6\u622A\u5668\u662F\u5982\u4F55\u5DE5\u4F5C\u7684" aria-hidden="true">#</a> \u62E6\u622A\u5668\u662F\u5982\u4F55\u5DE5\u4F5C\u7684</h3><p>\u8C03\u7528 <code>.request.use()</code> \u548C <code>.response.use()</code> \u65B9\u6CD5\u65F6\uFF0C\u5C06\u4F20\u5165\u7684\u62E6\u622A\u5668\u56DE\u8C03\u65B9\u6CD5\u5206\u522B\u5B58\u5165 <code>\u8BF7\u6C42\u62E6\u622A\u5668\u56DE\u8C03\u6570\u7EC4</code> \u548C <code>\u54CD\u5E94\u62E6\u622A\u5668\u56DE\u8C03\u6570\u7EC4</code>\u3002</p><p>\u5728\u8C03\u7528 <code>.get()</code> \u7B49\u65B9\u6CD5\u65F6\uFF0C\u5C06 <code>\u8BF7\u6C42\u62E6\u622A\u5668\u56DE\u8C03\u6570\u7EC4</code> \u548C <code>\u54CD\u5E94\u62E6\u622A\u5668\u56DE\u8C03\u6570\u7EC4</code> \u4E0E\u53D1\u9001\u8BF7\u6C42\u7684\u65B9\u6CD5\u62FC\u63A5\u6210\u4E00\u4E2A\u5B8C\u6574\u7684\u6267\u884C\u94FE\uFF0C\u6309\u7167\u540C\u6B65\u6216\u5F02\u6B65\u7684\u6A21\u5F0F\u8C03\u7528\u6267\u884C\u94FE\u4E2D\u7684\u65B9\u6CD5\u3002</p><p>\u54CD\u5E94\u62E6\u622A\u5668\u603B\u662F\u5728\u8FD4\u56DE\u54CD\u5E94\u7ED3\u679C\u540E\u6309\u987A\u5E8F\u6267\u884C\u3002</p><p>\u8BF7\u6C42\u62E6\u622A\u5668\u6839\u636E <code>synchronous</code> \u914D\u7F6E\u4E0D\u540C\uFF0C\u884C\u4E3A\u6709\u6240\u4E0D\u540C\uFF1A</p><ul><li><p>\u5F02\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\u6A21\u5F0F\u3002</p><p>\u6CA1\u6709\u8BBE\u7F6E <code>synchronous</code> \u65F6\u9ED8\u8BA4\u4E3A\u5F02\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\u6A21\u5F0F\uFF0C\u5373\u904D\u5386\u6267\u884C\u6240\u6709\u7684\u8BF7\u6C42\u62E6\u622A\u5668\u4E00\u53C2\u56DE\u8C03\uFF0C\u6267\u884C\u62A5\u9519\u540E\u505C\u6B62\u904D\u5386\uFF0C\u5E76\u6267\u884C\u8BE5\u62E6\u622A\u5668\u7684\u4E8C\u53C2\u56DE\u8C03\u3002</p></li><li><p>\u540C\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\u6A21\u5F0F\u3002</p><p>\u8BBE\u7F6E <code>synchronous</code> \u4E3A <code>false</code> \u65F6\u4E3A\u540C\u6B65\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\u6A21\u5F0F\uFF0C\u5C06\u6267\u884C\u94FE\u5305\u88C5\u6210\u4E00\u4E2A Promise \u94FE\u987A\u5E8F\u6267\u884C\u3002</p></li></ul><h3 id="\u62E6\u622A\u5668\u7684\u6267\u884C\u987A\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u62E6\u622A\u5668\u7684\u6267\u884C\u987A\u5E8F" aria-hidden="true">#</a> \u62E6\u622A\u5668\u7684\u6267\u884C\u987A\u5E8F</h3><p>\u5148\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\uFF0C\u540E\u6267\u884C\u54CD\u5E94\u62E6\u622A\u5668\u3002</p><ul><li><p>\u8BBE\u7F6E\u591A\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\u7684\u60C5\u51B5\uFF1A\u540E\u6DFB\u52A0\u7684\u62E6\u622A\u5668\u5148\u6267\u884C\u3002</p></li><li><p>\u8BBE\u7F6E\u591A\u4E2A\u54CD\u5E94\u62E6\u622A\u5668\u7684\u60C5\u51B5\uFF1A\u6309\u7167\u8BBE\u7F6E\u987A\u5E8F\u6267\u884C\u3002</p></li></ul><h3 id="\u540C\u6B65-\u5F02\u6B65" tabindex="-1"><a class="header-anchor" href="#\u540C\u6B65-\u5F02\u6B65" aria-hidden="true">#</a> \u540C\u6B65&amp;\u5F02\u6B65</h3><p>\u8BA1\u7B97\u673A\u4E2D\u7684\u540C\u6B65\uFF0C\u6307\u7684\u662F\u73B0\u5B9E\u4E2D\u7684\u4E00\u6B65\u4E00\u6B65\uFF08\u540C\u4E00\u65F6\u95F4\u53EA\u80FD\u5E72\u4E00\u4EF6\u4E8B\uFF09\uFF0C\u5F02\u6B65\u6307\u7684\u662F\u540C\u65F6\u8FDB\u884C\uFF08\u540C\u4E00\u65F6\u95F4\u80FD\u5E72\u591A\u4EF6\u4E8B\uFF09\u3002</p><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,54),r={href:"https://www.npmjs.com/package/axios#interceptors",target:"_blank",rel:"noopener noreferrer"},k=c("npm axios");function d(v,m){const s=i("ExternalLinkIcon");return p(),t("div",null,[l,n("p",null,[n("a",r,[k,e(s)])])])}const f=a(u,[["render",d],["__file","\u4ECE\u6E90\u7801\u89E3\u6790axios\u62E6\u622A\u5668\u662F\u5982\u4F55\u5DE5\u4F5C\u7684.html.vue"]]);export{f as default};
