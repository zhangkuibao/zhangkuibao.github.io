import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as p}from"./app.17eb5f9b.js";const e={},t=p(`<blockquote><p>\u89C1\u8BC6\u5230\u4E86\u4E00\u4E9B\u6CA1\u89C1\u8FC7\u7684\u5199\u6CD5, \u7F51\u4E0A\u627E\u4E0D\u5230\u6EE1\u610F\u7684\u7B54\u6848, \u53EA\u597D\u81EA\u5DF1\u627E\u54AF, \u5B66\u4E60 ing++++</p></blockquote><h2 id="\u539F\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u539F\u4EE3\u7801" aria-hidden="true">#</a> \u539F\u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/foo&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;/foo&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> resolve<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898" aria-hidden="true">#</a> \u95EE\u9898</h2><ol><li><code>resolve =&gt; require([&#39;/foo&#39;], resolve)</code> \u4E2D\u7684 <code>resolve</code> \u662F\u4EC0\u4E48?</li><li><code>require</code> \u7684\u4E8C\u53C2\u662F\u4EC0\u4E48?</li></ol><h2 id="\u7B54\u6848" tabindex="-1"><a class="header-anchor" href="#\u7B54\u6848" aria-hidden="true">#</a> \u7B54\u6848</h2><ol><li><code>resolve</code> \u51FD\u6570</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolvedDef</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isESModule</span><span class="token punctuation">(</span>resolvedDef<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    resolvedDef <span class="token operator">=</span> resolvedDef<span class="token punctuation">.</span>default<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  def<span class="token punctuation">.</span>resolved <span class="token operator">=</span>
    <span class="token keyword">typeof</span> resolvedDef <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> resolvedDef <span class="token operator">:</span> _Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>resolvedDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
  match<span class="token punctuation">.</span>components<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> resolvedDef<span class="token punctuation">;</span>
  pending<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pending <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u6A21\u5757\u5F15\u5165\u540E\u7684\u56DE\u8C03\u51FD\u6570\u56DE\u8C03\u51FD\u6570, \u63A5\u6536\u4E00\u53C2\u5F15\u5165\u7684\u6A21\u5757\u4F5C\u4E3A\u53C2\u6570, \u5F15\u5165\u591A\u4E2A\u6A21\u5757\u65F6\u4EE5\u591A\u53C2\u800C\u975E\u6570\u7EC4\u5F62\u5F0F\u4F20\u9012</li></ol><h2 id="\u63A2\u5BFB\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u63A2\u5BFB\u6B65\u9AA4" aria-hidden="true">#</a> \u63A2\u5BFB\u6B65\u9AA4</h2><ol><li>\u5728 <code>component</code> \u4E2D\u6253\u5370 <code>resolve</code>, \u53D1\u73B0\u5176\u503C\u662F <code>node_modules\\_vue-router@3.3.4@vue-router\\dist\\vue-router.esm.js</code> \u6587\u4EF6\u4E2D <code>once</code> \u51FD\u6570\u8FD4\u56DE\u7684\u533F\u540D\u51FD\u6570</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u786E\u4FDD\u51FD\u6570\u53EA\u6267\u884C\u4E00\u6B21</span>
<span class="token keyword">function</span> <span class="token function">once</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> called <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>len<span class="token operator">--</span><span class="token punctuation">)</span> args<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> arguments<span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5728 <code>vue-router.esm.js</code> \u6587\u4EF6\u4E2D\u627E\u5230 <code>once</code> \u51FD\u6570\u53CA\u8C03\u7528 <code>once</code> \u7684 <code>resolveAsyncComponents</code> \u51FD\u6570</li></ol><p><code>resolveAsyncComponents</code> \u51FD\u6570\u4EE3\u7801\u7247\u6BB5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> resolve <span class="token operator">=</span> <span class="token function">once</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolvedDef</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isESModule</span><span class="token punctuation">(</span>resolvedDef<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    resolvedDef <span class="token operator">=</span> resolvedDef<span class="token punctuation">.</span>default<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  def<span class="token punctuation">.</span>resolved <span class="token operator">=</span>
    <span class="token keyword">typeof</span> resolvedDef <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> resolvedDef <span class="token operator">:</span> _Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>resolvedDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
  match<span class="token punctuation">.</span>components<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> resolvedDef<span class="token punctuation">;</span>
  pending<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pending <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> reject <span class="token operator">=</span> <span class="token function">once</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> msg <span class="token operator">=</span> <span class="token string">&quot;Failed to resolve async component &quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> reason<span class="token punctuation">;</span>
  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&quot;production&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    error <span class="token operator">=</span> <span class="token function">isError</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span> <span class="token operator">?</span> reason <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u53EF\u4EE5\u770B\u51FA\u6700\u5F00\u59CB\u95EE\u9898\u4E2D\u7684 <code>resolve</code> \u51FD\u6570\u5C31\u662F\u4E0A\u8FF0\u4EE3\u7801\u4E2D <code>once</code> \u51FD\u6570\u4E2D\u7684\u533F\u540D\u51FD\u6570, \u5373:</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolvedDef</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isESModule</span><span class="token punctuation">(</span>resolvedDef<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    resolvedDef <span class="token operator">=</span> resolvedDef<span class="token punctuation">.</span>default<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  def<span class="token punctuation">.</span>resolved <span class="token operator">=</span>
    <span class="token keyword">typeof</span> resolvedDef <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> resolvedDef <span class="token operator">:</span> _Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>resolvedDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
  match<span class="token punctuation">.</span>components<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> resolvedDef<span class="token punctuation">;</span>
  pending<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pending <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> msg <span class="token operator">=</span> <span class="token string">&quot;Failed to resolve async component &quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> reason<span class="token punctuation">;</span>
  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&quot;production&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    error <span class="token operator">=</span> <span class="token function">isError</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span> <span class="token operator">?</span> reason <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u8BBA" aria-hidden="true">#</a> \u7ED3\u8BBA</h2><ol><li><p>\u6700\u5F00\u59CB\u95EE\u9898\u91CC\u7684 <code>resolve</code> (\u6CE8\u610F <code>resolve</code> \u53EA\u662F\u5F62\u53C2) \u662F <code>vue-router</code> \u8FD4\u56DE\u7684\u65B9\u6CD5, \u53EA\u6267\u884C\u4E00\u6B21, \u7528\u4E8E(\u6302\u8F7D\u7EC4\u4EF6?), \u63A5\u6536 <code>require</code> \u5F15\u5165\u7684\u6A21\u5757\u4E3A\u53C2\u6570</p></li><li><p><code>require</code> \u7684\u4E00\u53C2\u4E3A\u8981\u5F15\u5165\u7684\u6A21\u5757, \u4E3A\u591A\u4E2A\u65F6\u7528\u6570\u7EC4\u5F62\u5F0F\u4F20\u5165, \u4E8C\u53C2\u4E3A\u5F15\u5165\u5B8C\u6210\u540E\u7684\u56DE\u8C03\u51FD\u6570, \u8BE5\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u4E3A\u4E00\u53C2\u5F15\u5165\u7684\u6A21\u5757, \u591A\u4E2A\u6A21\u5757\u65F6\u4E3A\u591A\u4E2A\u53C2\u6570\u800C\u4E0D\u662F\u6570\u7EC4</p></li></ol><ul><li>\u6539\u5199\u4E3A\u4EE5\u4E0B\u5F62\u5F0F\u4E5F\u53EF\u6267\u884C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/foo&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">mount</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;/foo&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">mod</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">mount</span><span class="token punctuation">(</span>mod<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),o=[t];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","\u4F7F\u7528\u5F02\u6B65\u7EC4\u4EF6\u65F6\u7684resolve\u51FD\u6570.html.vue"]]);export{k as default};
