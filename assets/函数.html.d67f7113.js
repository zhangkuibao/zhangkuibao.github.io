import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as p}from"./app.17eb5f9b.js";const t={},e=p(`<h2 id="\u6458\u8981" tabindex="-1"><a class="header-anchor" href="#\u6458\u8981" aria-hidden="true">#</a> \u6458\u8981</h2><ol><li>\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B\u5305\u62EC\u5B9A\u4E49\u51FD\u6570\u53C2\u6570\u7C7B\u578B\u548C\u8FD4\u56DE\u503C\u7C7B\u578B\u3002</li><li>\u7ED9\u51FD\u6570\u63D0\u4F9B\u591A\u4E2A\u51FD\u6570\u7C7B\u578B\u5B9A\u4E49\u6765\u8FDB\u884C\u51FD\u6570\u91CD\u8F7D\u3002</li></ol><h2 id="\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u5B9A\u4E49\u51FD\u6570\u7C7B\u578B</h2><ul><li>\u5B9A\u4E49\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u548C\u8FD4\u56DE\u503C\u7C7B\u578B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> myAdd <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">number</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">myAdd2</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function-variable function">number</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u91CD\u8F7D" tabindex="-1"><a class="header-anchor" href="#\u91CD\u8F7D" aria-hidden="true">#</a> \u91CD\u8F7D</h2><p>\u4E3A\u540C\u4E00\u4E2A\u51FD\u6570\u63D0\u4F9B\u591A\u4E2A\u51FD\u6570\u7C7B\u578B\u5B9A\u4E49\u6765\u8FDB\u884C\u51FD\u6570\u91CD\u8F7D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> suits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;hearts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;spades&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;clubs&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;diamonds&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">pickCard</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">suit</span><span class="token operator">:</span> string<span class="token punctuation">;</span> card<span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">pickCard</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">suit</span><span class="token operator">:</span> string<span class="token punctuation">;</span> card<span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">pickCard</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span>
    <span class="token comment">// Check to see if we&#39;re working with an object/array</span>
    <span class="token comment">// if so, they gave us the deck and we&#39;ll pick the card</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">==</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> pickedCard <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> x<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> pickedCard<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Otherwise just let them pick the card</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">==</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> pickedSuit <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>x <span class="token operator">/</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">suit</span><span class="token operator">:</span> suits<span class="token punctuation">[</span>pickedSuit<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">card</span><span class="token operator">:</span> x <span class="token operator">%</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[e];function c(l,r){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","\u51FD\u6570.html.vue"]]);export{k as default};
