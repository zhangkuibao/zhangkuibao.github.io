import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as p}from"./app.17eb5f9b.js";const t={},e=p(`<h2 id="\u6876\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6876\u6392\u5E8F" aria-hidden="true">#</a> \u6876\u6392\u5E8F</h2><p>\u6876\u6392\u5E8F (Bucket Sort)\u662F\u4E00\u79CD\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5176\u5DE5\u4F5C\u539F\u7406\u662F\u5C06\u6570\u7EC4\u5206\u5230\u6709\u9650\u6570\u91CF\u7684\u6876\u5B50\u91CC\uFF0C\u6BCF\u4E2A\u6876\u5B50\u518D\u4E2A\u522B\u8FDB\u884C\u6392\u5E8F\u3002\u8FD9\u79CD\u7B97\u6CD5\u662F\u9E3D\u5DE2\u6392\u5E8F \u7684\u4E00\u79CD\u5F52\u7EB3\u7ED3\u679C\u3002\u5F53\u8981\u88AB\u6392\u5E8F\u7684\u6570\u7EC4\u5185\u7684\u6570\u503C\u662F\u5747\u5300\u5206\u914D\u7684\u65F6\u5019\uFF0C\u6876\u6392\u5E8F\u53EF\u4EE5\u4F7F\u7528\u7EBF\u6027\u65F6\u95F4\u8FDB\u884C\u6392\u5E8F\u3002</p><h3 id="\u7B97\u6CD5\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u9898\u76EE" aria-hidden="true">#</a> \u7B97\u6CD5\u9898\u76EE</h3><ul><li>215.\u6570\u7EC4\u4E2D\u7684\u7B2C k \u4E2A\u6700\u5927\u5143\u7D20.js</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">findKthLargest</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> bucket <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bucket<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      bucket<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">10000</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    bucket<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">10000</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">20000</span><span class="token punctuation">;</span> k <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bucket<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bucket<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      k <span class="token operator">-=</span> bucket<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> j <span class="token operator">-</span> <span class="token number">10000</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[e];function c(u,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","\u6876\u6392\u5E8F.html.vue"]]);export{r as default};
