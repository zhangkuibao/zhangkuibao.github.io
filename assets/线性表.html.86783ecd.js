import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as t}from"./app.17eb5f9b.js";const p={},e=t(`<h2 id="\u6458\u8981" tabindex="-1"><a class="header-anchor" href="#\u6458\u8981" aria-hidden="true">#</a> \u6458\u8981</h2><ol><li>\u810F\u6570\u636E\uFF1A\u5728\u65B0\u5F00\u8F9F\uFF08\u5206\u914D\uFF09\u4E00\u7247\u5B58\u50A8\u7A7A\u95F4\u65F6\uFF0C\u8FD9\u5757\u5B58\u50A8\u7A7A\u95F4\u4F1A\u4FDD\u7559\u4E4B\u524D\u5B58\u50A8\u5728\u6B64\u7684\u6570\u636E\uFF0C\u8FD9\u4E9B\u6570\u636E\u5C31\u53EB\u810F\u6570\u636E\u3002</li></ol><h2 id="\u987A\u5E8F\u8868" tabindex="-1"><a class="header-anchor" href="#\u987A\u5E8F\u8868" aria-hidden="true">#</a> \u987A\u5E8F\u8868</h2><p>\u987A\u5E8F\u8868\u4E2D\u5143\u7D20\u7684\u903B\u8F91\u987A\u5E8F\u4E0E\u7269\u7406\u987A\u5E8F\u76F8\u540C\u3002</p><h3 id="\u5B58\u50A8\u7A7A\u95F4\u5206\u914D\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5B58\u50A8\u7A7A\u95F4\u5206\u914D\u65B9\u5F0F" aria-hidden="true">#</a> \u5B58\u50A8\u7A7A\u95F4\u5206\u914D\u65B9\u5F0F</h3><ul><li><p>\u9759\u6001\u5206\u914D</p><p>\u521B\u5EFA\u5B58\u50A8\u7A7A\u95F4\u65F6\u6307\u5B9A\u7A7A\u95F4\u7684\u5927\u5C0F\uFF0C\u7A7A\u95F4\u5360\u6EE1\u65F6\u6DFB\u52A0\u65B0\u6570\u636E\u4F1A\u5BFC\u81F4\u6EA2\u51FA\u62A5\u9519\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MaxSize</span> <span class="token expression"><span class="token number">10</span></span></span>

<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> data<span class="token punctuation">[</span>MaxSize<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>SqList<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u52A8\u6001\u5206\u914D</p><p>\u5B58\u50A8\u7A7A\u95F4\u5728\u7A0B\u5E8F\u6267\u884C\u671F\u95F4\u52A8\u6001\u5206\u914D\uFF0C\u5728\u7A7A\u95F4\u5360\u6EE1\u65F6\u5F00\u8F9F\u51FA\u53E6\u4E00\u5757\u66F4\u5927\u7684\u5B58\u50A8\u7A7A\u95F4\u66FF\u6362\u6389\u539F\u6765\u7684\u5B58\u50A8\u7A7A\u95F4\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> <span class="token operator">*</span>data<span class="token punctuation">;</span>
  <span class="token keyword">int</span> MaxSize<span class="token punctuation">;</span> <span class="token comment">// \u987A\u5E8F\u8868\u7684\u6700\u5927\u5BB9\u91CF</span>
	<span class="token keyword">int</span> length<span class="token punctuation">;</span>   <span class="token comment">// \u987A\u5E8F\u8868\u7684\u5F53\u524D\u957F\u5EA6</span>
<span class="token punctuation">}</span>SqList<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="\u987A\u5E8F\u8868\u7684\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u987A\u5E8F\u8868\u7684\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u987A\u5E8F\u8868\u7684\u4EE3\u7801\u5B9E\u73B0</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> <span class="token operator">*</span>data<span class="token punctuation">;</span>   	<span class="token comment">// \u6307\u5411\u5B58\u50A8\u7A7A\u95F4\u7684\u6307\u9488</span>
	<span class="token keyword">int</span> length<span class="token punctuation">;</span>		<span class="token comment">// \u5F53\u524D\u5B58\u50A8\u7684\u5143\u7D20\u6570\u91CF</span>
	<span class="token keyword">int</span> maxLength<span class="token punctuation">;</span> 	<span class="token comment">// \u6700\u5927\u5B58\u50A8\u5143\u7D20\u6570\u91CF</span>
<span class="token punctuation">}</span> SeqList<span class="token punctuation">;</span>

<span class="token comment">// \u521D\u59CB\u5316\u987A\u5E8F\u8868</span>
<span class="token keyword">void</span> <span class="token function">initSeqList</span><span class="token punctuation">(</span>SeqList <span class="token operator">&amp;</span>L<span class="token punctuation">,</span> <span class="token keyword">int</span> maxLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5F00\u8F9F\u5B58\u50A8\u7A7A\u95F4</span>
	L<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">*</span> maxLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u521D\u59CB\u5316\u6570\u636E\uFF0C\u6E05\u9664\u810F\u6570\u636E</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> maxLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		L<span class="token punctuation">.</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	L<span class="token punctuation">.</span>maxLength <span class="token operator">=</span> maxLength<span class="token punctuation">;</span>
	L<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u589E\u52A0\u987A\u5E8F\u8868\u957F\u5EA6</span>
<span class="token keyword">void</span> <span class="token function">increaseSeqList</span><span class="token punctuation">(</span>SeqList <span class="token operator">&amp;</span>L<span class="token punctuation">,</span> <span class="token keyword">int</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> L<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
	L<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>length <span class="token operator">+</span> L<span class="token punctuation">.</span>maxLength<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> L<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		L<span class="token punctuation">.</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	L<span class="token punctuation">.</span>maxLength <span class="token operator">=</span> length <span class="token operator">+</span> L<span class="token punctuation">.</span>maxLength<span class="token punctuation">;</span>
	<span class="token function">free</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	p <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6253\u5370\u987A\u5E8F\u8868\u5143\u7D20</span>
<span class="token keyword">void</span> <span class="token function">printSeqList</span><span class="token punctuation">(</span>SeqList <span class="token operator">&amp;</span>L<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> L<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u987A\u5E8F\u8868\u5143\u7D20\uFF1A%d-%d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> L<span class="token punctuation">.</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u987A\u5E8F\u8868\u5DF2\u5B58\u6570\u636E/\u6700\u5927\u957F\u5EA6\uFF1A%d/%d\\n&quot;</span><span class="token punctuation">,</span> L<span class="token punctuation">.</span>length<span class="token punctuation">,</span> L<span class="token punctuation">.</span>maxLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u63D2\u5165\u5143\u7D20</span>
<span class="token keyword">bool</span> <span class="token function">insertItemToSeqList</span><span class="token punctuation">(</span>SeqList <span class="token operator">&amp;</span>L<span class="token punctuation">,</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u53EA\u80FD\u6309\u987A\u5E8F\u6DFB\u52A0</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">&gt;</span> L<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u907F\u514D\u6EA2\u51FA</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">&gt;</span> L<span class="token punctuation">.</span>maxLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">int</span> len <span class="token operator">=</span> L<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
	<span class="token comment">// \u6DFB\u52A0\u65F6index\u4E4B\u540E\u7684\u5143\u7D20\u5168\u90E8\u540E\u79FB\uFF0C\u8981\u79FB\u52A8 L.length - index \u4E2A\u5143\u7D20\uFF0C\u4ECE\u540E\u5F80\u524D\u904D\u5386\u66F4\u65B9\u4FBF</span>
	<span class="token keyword">while</span><span class="token punctuation">(</span>len<span class="token operator">--</span> <span class="token operator">&gt;</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		L<span class="token punctuation">.</span>data<span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> L<span class="token punctuation">.</span>data<span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	L<span class="token punctuation">.</span>data<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
	L<span class="token punctuation">.</span>length<span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5220\u9664\u5143\u7D20</span>
<span class="token keyword">bool</span> <span class="token function">removeItemFromSeqList</span><span class="token punctuation">(</span>SeqList <span class="token operator">&amp;</span>L<span class="token punctuation">,</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u907F\u514D\u8D8A\u754C</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">&gt;</span> L<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u5220\u9664\u65F6\u8981\u628Aindex\u540E\u7684\u6240\u6709\u5143\u7D20\u524D\u79FB\uFF0C\u8981\u79FB\u52A8 L.length - index \u4E2A\u5143\u7D20\uFF0C\u4ECEindex\u4E0B\u6807\u5F00\u59CB\u904D\u5386\uFF0C\u6240\u6709\u6570\u636E\u524D\u79FB\u4E00\u4F4D\uFF0C\u4E0D\u9700\u8981\u904D\u5386\u6700\u540E\u4E00\u4F4D</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> L<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		L<span class="token punctuation">.</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> L<span class="token punctuation">.</span>data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	L<span class="token punctuation">.</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	SeqList L<span class="token punctuation">;</span>
	<span class="token comment">// \u521D\u59CB\u5316</span>
	<span class="token function">initSeqList</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u6DFB\u52A0\u5143\u7D20</span>
	<span class="token function">insertItemToSeqList</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">insertItemToSeqList</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">insertItemToSeqList</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">insertItemToSeqList</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">printSeqList</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u6269\u5C55\u987A\u5E8F\u8868\u5B58\u50A8\u7A7A\u95F4</span>
	<span class="token function">increaseSeqList</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">printSeqList</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u5220\u9664\u4E0B\u68071\u4F4D\u7F6E\u7684\u5143\u7D20</span>
	<span class="token function">removeItemFromSeqList</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">printSeqList</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","\u7EBF\u6027\u8868.html.vue"]]);export{r as default};
