(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{752:function(_,v,e){"use strict";e.r(v);var t=e(12),i=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h2",{attrs:{id:"背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[_._v("#")]),_._v(" 背景")]),_._v(" "),e("p",[e("code",[_._v("A")]),_._v(" 项目由 "),e("code",[_._v("B")]),_._v(" 项目变体而来，在 "),e("code",[_._v("A")]),_._v(" 上进行到一些共同性修改需要同步到 "),e("code",[_._v("B")]),_._v(" 项目上")]),_._v(" "),e("p",[e("code",[_._v("A")]),_._v(" 的git地址为：A.git")]),_._v(" "),e("p",[e("code",[_._v("B")]),_._v(" 的地址为：B.git")]),_._v(" "),e("h2",{attrs:{id:"解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[_._v("#")]),_._v(" 解决方案")]),_._v(" "),e("h3",{attrs:{id:"把a的具体提交合并到b上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把a的具体提交合并到b上"}},[_._v("#")]),_._v(" 把A的具体提交合并到B上")]),_._v(" "),e("p",[_._v("思路是把 "),e("code",[_._v("A")]),_._v(" 中修复问题的提交（commit）合并到 "),e("code",[_._v("B")]),_._v(" 中")]),_._v(" "),e("p",[_._v("这样做合并到文件更加具体，造成的冲突会很少")]),_._v(" "),e("ul",[e("li",[_._v("在项目 "),e("code",[_._v("A")]),_._v(" 中\n"),e("code",[_._v("git checkout -b fix_bug")]),_._v("         从当前分支创建分支，同时切换到这个分支")]),_._v(" "),e("li",[_._v("在项目 "),e("code",[_._v("B")]),_._v(" 中\n"),e("code",[_._v("git remote add origin_A A.git")]),_._v("   添加A的远程地址\n"),e("code",[_._v("git pull origin_A")]),_._v(" "),e("code",[_._v("git cherry-pick <SHA>")]),_._v("           把指定commit合并到当前分支")])]),_._v(" "),e("h3",{attrs:{id:"把a的一个分支合并到b上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把a的一个分支合并到b上"}},[_._v("#")]),_._v(" 把A的一个分支合并到B上")]),_._v(" "),e("p",[_._v("思路是在 "),e("code",[_._v("A")]),_._v(" 项目中新建一个分支修改问题，修改完毕后发布分支，在 "),e("code",[_._v("B")]),_._v(" 项目中合并这个分支")]),_._v(" "),e("p",[_._v("需要注意的是执行分支合并时会把目标分支的所有文件都拉到当前分支，如果两个分支差异较大的话会产生很多冲突")]),_._v(" "),e("ul",[e("li",[_._v("在项目 "),e("code",[_._v("A")]),_._v(" 中\n"),e("code",[_._v("git checkout -b fix_bug")]),_._v("         从当前分支创建分支，同时切换到这个分支")]),_._v(" "),e("li",[_._v("在项目 "),e("code",[_._v("B")]),_._v(" 中\n"),e("code",[_._v("git remote add origin_A A.git")]),_._v("   添加A的远程地址\n"),e("code",[_._v("git pull origin_A")]),_._v(" "),e("code",[_._v("git checkout -b fix_bug origin_A/fix_bug")]),_._v("      从A中拉取要合并的分支\n"),e("code",[_._v("git merge fix_bug --allow-unrelated-histories")]),_._v(" 把fix_bug合并到当前分支，不加 "),e("code",[_._v("allow-unrelated-histories")]),_._v(" 命令会报 "),e("code",[_._v("fatal: refusing to merge unrelated")]),_._v(" 错误，因为git默认不支持合并不同仓库的分支")])])])}),[],!1,null,null,null);v.default=i.exports}}]);