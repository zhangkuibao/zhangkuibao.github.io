(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{756:function(t,e,s){"use strict";s.r(e);var o=s(12),n=Object(o.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[t._v("Web Components 是 W3C 正在向 HTML 和 DOM 规范添加的一套标准，它允许在 Web 应用程序中创建可重用的组件。")]),t._v(" "),s("p",[t._v("实际上就是官方的组件规范。")]),t._v(" "),s("h2",{attrs:{id:"实现-web-components-的关键技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现-web-components-的关键技术"}},[t._v("#")]),t._v(" 实现 Web Components 的关键技术")]),t._v(" "),s("p",[t._v("Web Components 由三项主要技术组成：")]),t._v(" "),s("ul",[s("li",[t._v("Custom elements（自定义元素）")])]),t._v(" "),s("p",[t._v("它使开发者能够将 HTML 页面的功能封装为 custom elements（自定义标签）、即封装组件。")]),t._v(" "),s("ul",[s("li",[t._v("Shadow DOM（影子 DOM）")])]),t._v(" "),s("p",[t._v("通过 Shadow DOM 可以保持元素的功能私有，这样它们就可以被脚本化和样式化，而不用担心与文档的其他部分发生冲突。")]),t._v(" "),s("ul",[s("li",[t._v("HTML templates（HTML 模板）")])]),t._v(" "),s("p",[s("code",[t._v("<template>")]),t._v(" 和 "),s("code",[t._v("<slot>")]),t._v(" 元素使您可以编写不在呈现页面中显示的标记模板。然后它们可以作为自定义元素结构的基础被多次重用。")]),t._v(" "),s("p",[t._v("template 标签中的内容不会被渲染，但可以通过 js 来访问操作，类似于以前使用 "),s("code",[t._v('<script type="text/html">')]),t._v(" 当做模板一样。")]),t._v(" "),s("p",[t._v("slot 标签的支持度还很低。")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Web_Components",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web Components——MDN"),s("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);