(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{778:function(t,s,a){"use strict";a.r(s);var r=a(12),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("URL 接口用于解析，构造，规范化和编码 URLs。")]),t._v(" "),a("p",[t._v("一个完整的 url 包括："),a("code",[t._v("{协议}://{用户名}:{密码}@{主机名（域名）}:{端口}#{hash}?{query}")])]),t._v(" "),a("h2",{attrs:{id:"构造器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造器"}},[t._v("#")]),t._v(" 构造器")]),t._v(" "),a("p",[t._v("可以使用 new URL() 来构建一个 URL 对象。")]),t._v(" "),a("h2",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("p",[t._v("一个 url 对象 "),a("code",[t._v("new URL('http://zkb:123@localhost:3000/zhangkb?name=zkb&age=18#/escript/url')")]),t._v("，包含如下属性。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/URLSearchParams",target:"_blank",rel:"noopener noreferrer"}},[t._v("URLSearchParams 对象"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("hash")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#/escript/url"')]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跟在 # 之后的字符串")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:3000"')]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 域名+端口")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("hostname")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅域名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://zkb:123@localhost:3000/#/escript/url"')]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 完整 url")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("origin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:3000"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 协议+域名+端口")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 密码")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pathname")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/zhangkb"')]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 资源路径")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3000"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http:"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"?name=zkb&age=18"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跟在 ? 后的参数字符串，需要在 # 之前")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("searchParams")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" URLSearchParams "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// search 中键值对的二维数组迭代器，[..searchParams] 可得到 [["name", "zkb"],["age", "18"]]')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zkb"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[t._v("#")]),t._v(" 静态方法")]),t._v(" "),a("p",[t._v("URL 类包含两个静态方法。")]),t._v(" "),a("h3",{attrs:{id:"createobjecturl-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#createobjecturl-object"}},[t._v("#")]),t._v(" createObjectURL(object)")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：此特性在 Service Worker 中不可用，因为它有可能导致内存泄漏。")])]),t._v(" "),a("p",[t._v("根据参数创建一个唯一的 blob 链接（该链接协议为以 blob:，后跟唯一标识浏览器中的对象的掩码）。通常用来根据图片的二进制数据来创建图片。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" response "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flower.jpg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myBlob "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("blob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" objectURL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createObjectURL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myBlob"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myImage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"img"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyImage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" objectURL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[t._v("参数可以是 File 对象、Blob 对象或者 MediaSource 对象。​")])]),t._v(" "),a("li",[a("p",[t._v("blob 链接的生命周期")]),t._v(" "),a("p",[t._v("这个新的 URL 对象表示指定的 File 对象或 Blob 对象。它的生命周期和创建它的窗口中的 document 绑定。")])]),t._v(" "),a("li",[a("p",[t._v("内存管理")]),t._v(" "),a("p",[t._v("在每次调用 createObjectURL() 方法时，都会创建一个新的 URL 对象，即使你已经用相同的对象作为参数创建过。")]),t._v(" "),a("p",[t._v("当不再需要这些 URL 对象时，每个对象必须通过调用 URL.revokeObjectURL() 方法来释放。")]),t._v(" "),a("p",[t._v("浏览器在 document 卸载的时候，会自动释放它们。")])])]),t._v(" "),a("h3",{attrs:{id:"revokeobjecturl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#revokeobjecturl"}},[t._v("#")]),t._v(" revokeObjectURL()")]),t._v(" "),a("p",[t._v("销毁之前使用 URL.createObjectURL()方法创建的 URL 实例。")])])}),[],!1,null,null,null);s.default=e.exports}}]);