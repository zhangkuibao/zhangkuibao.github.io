(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{781:function(a,t,e){"use strict";e.r(t);var s=e(12),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("本文章介绍一些与媒体录制（音视频）相关的内容，包括：获取设备权限的 MediaDevices API、媒体流 MediaStream、控制媒体录制的 MediaRecorder API 和录制媒体的流程。")]),a._v(" "),e("h2",{attrs:{id:"mediadevices-媒体设备接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediadevices-媒体设备接口"}},[a._v("#")]),a._v(" MediaDevices 媒体设备接口")]),a._v(" "),e("p",[a._v("MediaDevices 接口提供访问连接媒体输入的设备，如照相机和麦克风，以及屏幕共享等。它可以使你取得任何硬件资源的媒体数据。")]),a._v(" "),e("p",[a._v("MediaDevices 的功能集成在 navigator.mediaDevices 中。")]),a._v(" "),e("p",[a._v("用 MediaDevices 成功获取授权时会得到一个 MediaStream，里面包含了请求的媒体类型的轨道。可以用 MediaRecorder 进行操作。")]),a._v(" "),e("h3",{attrs:{id:"事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[a._v("#")]),a._v(" 事件")]),a._v(" "),e("h4",{attrs:{id:"devicechange"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#devicechange"}},[a._v("#")]),a._v(" devicechange")]),a._v(" "),e("p",[a._v("每当媒体设备（例如相机，麦克风或扬声器）连接到系统或从系统中移除时，devicechange 事件就会被发送到 MediaDevices 实例。")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("navigator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mediaDevices"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("ondevicechange")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("event")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h3",{attrs:{id:"方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[a._v("#")]),a._v(" 方法")]),a._v(" "),e("h4",{attrs:{id:"mediadevices-enumeratedevices"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediadevices-enumeratedevices"}},[a._v("#")]),a._v(" MediaDevices.enumerateDevices()")]),a._v(" "),e("p",[a._v("获取有关系统中可用的媒体输入和输出设备的一系列信息。")]),a._v(" "),e("p",[a._v("返回一个 promise，then 中包含设备信息。")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("navigator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mediaDevices"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("enumerateDevices")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("res")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h4",{attrs:{id:"mediadevices-getsupportedconstraints"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediadevices-getsupportedconstraints"}},[a._v("#")]),a._v(" MediaDevices.getSupportedConstraints()")]),a._v(" "),e("p",[a._v("返回一个对象，该对象指明了 MediaStreamTrack 接口支持的可约束的属性。")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" SupportedConstraints "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" navigator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mediaDevices"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSupportedConstraints")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h4",{attrs:{id:"mediadevices-getdisplaymedia"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediadevices-getdisplaymedia"}},[a._v("#")]),a._v(" MediaDevices.getDisplayMedia()")]),a._v(" "),e("p",[a._v("提示用户选择显示器或显示器的一部分（例如窗口）以捕获为 MediaStream 以便共享或记录。返回解析为 MediaStream 的 Promise。")]),a._v(" "),e("p",[a._v("取消时触发 catch， 成功时 then 中包含一个 MediaStream。")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("navigator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mediaDevices\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getDisplayMedia")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("res")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("catch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("err")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h4",{attrs:{id:"mediadevices-getusermedia-constraints"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediadevices-getusermedia-constraints"}},[a._v("#")]),a._v(" MediaDevices.getUserMedia(constraints)")]),a._v(" "),e("p",[e("strong",[a._v("注意：此方法只能在 https 中使用，在 http 中会静默失败。")])]),a._v(" "),e("p",[a._v("在用户通过提示允许的情况下，打开系统上的相机或屏幕共享和/或麦克风，并提供 MediaStream 包含视频轨道和/或音频轨道的输入。")]),a._v(" "),e("p",[a._v("参数为一个对象，需要说明要请求的设备权限。")]),a._v(" "),e("p",[a._v("返回一个 promise，than 中包含一个 MediaStream。")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("navigator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mediaDevices\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getUserMedia")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("video")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("audio")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("res")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("catch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("err")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h2",{attrs:{id:"mediarecorder-录制器接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-录制器接口"}},[a._v("#")]),a._v(" MediaRecorder 录制器接口")]),a._v(" "),e("p",[a._v("MediaRecorder 是用来进行媒体录制的接口, 它需要通过调用 new MediaRecorder() 构造方法实例化一个录制器对象。")]),a._v(" "),e("h3",{attrs:{id:"构造函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[a._v("#")]),a._v(" 构造函数")]),a._v(" "),e("blockquote",[e("p",[a._v("new MediaRecorder(MediaStream, options)")])]),a._v(" "),e("p",[a._v("创建一个新的 MediaRecorder 对象，二参为可配置项。")]),a._v(" "),e("p",[a._v("如果视频和/或音频的比特率没有指定，视频默认采用的比特率是 2.5Mbps，但音频的默认比特率并不固定，音频的默认比特率根据采样率和轨道数自适应。")]),a._v(" "),e("p",[a._v("完整配置如下：")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("mediaRecorder "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MediaRecorder")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("mediaStream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("mimeType")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"video/webm; codecs=vp9"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 返回 MediaRecorder 对象创建时选择器选择的录制容器的 MIME type")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("audioBitsPerSecond")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 指定音频的比特率。")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("videoBitsPerSecond")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 指定视频的比特率。")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("bitsPerSecond")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 指定音频和视频的比特率。 此属性可以用来指定上面两个属性。 如果上面两个属性只有其中之一和此属性被指定，则此属性可以用于设定另外一个属性。")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h3",{attrs:{id:"静态方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[a._v("#")]),a._v(" 静态方法")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-istypesupported"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-istypesupported"}},[a._v("#")]),a._v(" MediaRecorder.isTypeSupported()")]),a._v(" "),e("p",[a._v("返回一个 Boolean 值，来表示设置的 MIME type 是否被当前用户的设备支持。")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("MediaRecorder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("isTypeSupported")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"video/webm"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h3",{attrs:{id:"实例属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[a._v("#")]),a._v(" 实例属性")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-mimetype"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-mimetype"}},[a._v("#")]),a._v(" MediaRecorder.mimeType")]),a._v(" "),e("p",[a._v("返回 MediaRecorder 对象创建时选择器选择的录制容器的 MIME type")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-state"}},[a._v("#")]),a._v(" MediaRecorder.state")]),a._v(" "),e("p",[a._v("返回录制对象 MediaRecorder 的当前状态，可能的状态有：闲置中（inactive）、录制中（recording）、暂停（paused）。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-stream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-stream"}},[a._v("#")]),a._v(" MediaRecorder.stream")]),a._v(" "),e("p",[a._v("返回录制器对象 MediaRecorder 创建时构造函数传入的 MediaStream 对象。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-ignoremutedmedia"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-ignoremutedmedia"}},[a._v("#")]),a._v(" MediaRecorder.ignoreMutedMedia")]),a._v(" "),e("p",[a._v("用以指定 MediaRecorder 是否录制无声的输入源，默认值是 false。")]),a._v(" "),e("p",[a._v("如果这个属性是 false，录制器对象 MediaRecorder 会录制无声的音频或者黑屏的视频。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-videobitspersecond"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-videobitspersecond"}},[a._v("#")]),a._v(" MediaRecorder.videoBitsPerSecond")]),a._v(" "),e("p",[a._v("返回视频采用的编码比率，它可能和构造函数的设置比率不同，（if it was provided）。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-audiobitspersecond"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-audiobitspersecond"}},[a._v("#")]),a._v(" MediaRecorder.audioBitsPerSecond")]),a._v(" "),e("p",[a._v("返回音频采用的编码比率，它可能和构造函数的设置比率不同，（if it was provided）。")]),a._v(" "),e("h3",{attrs:{id:"实例方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[a._v("#")]),a._v(" 实例方法")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-pause"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-pause"}},[a._v("#")]),a._v(" MediaRecorder.pause()")]),a._v(" "),e("p",[a._v("暂停媒体录制。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-resume"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-resume"}},[a._v("#")]),a._v(" MediaRecorder.resume()")]),a._v(" "),e("p",[a._v("继续录制之前被暂停的录制动作。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-start"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-start"}},[a._v("#")]),a._v(" MediaRecorder.start()")]),a._v(" "),e("p",[a._v("开始录制媒体。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-stop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-stop"}},[a._v("#")]),a._v(" MediaRecorder.stop()")]),a._v(" "),e("p",[a._v("停止录制。同时触发 dataavailable 事件，之后不再记录。")]),a._v(" "),e("h3",{attrs:{id:"事件-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件-2"}},[a._v("#")]),a._v(" 事件")]),a._v(" "),e("p",[a._v("这些事件都需要绑定在 MediaRecorder 实例上。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-ondataavailable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-ondataavailable"}},[a._v("#")]),a._v(" MediaRecorder.ondataavailable")]),a._v(" "),e("p",[a._v("该事件可用于获取录制的媒体资源（在事件的 data 属性中会提供一个可用的 Blob 对象）。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-onpause"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-onpause"}},[a._v("#")]),a._v(" MediaRecorder.onpause")]),a._v(" "),e("p",[a._v("暂停时触发。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-onresume"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-onresume"}},[a._v("#")]),a._v(" MediaRecorder.onresume")]),a._v(" "),e("p",[a._v("从暂停中恢复录制时触发。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-onstart"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-onstart"}},[a._v("#")]),a._v(" MediaRecorder.onstart")]),a._v(" "),e("p",[a._v("开始录制时触发。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-onstop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-onstop"}},[a._v("#")]),a._v(" MediaRecorder.onstop")]),a._v(" "),e("p",[a._v("停止录制时触发。")]),a._v(" "),e("h4",{attrs:{id:"mediarecorder-onerror"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediarecorder-onerror"}},[a._v("#")]),a._v(" MediaRecorder.onerror")]),a._v(" "),e("p",[a._v("发生错误时触发。")]),a._v(" "),e("h3",{attrs:{id:"获取录制数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取录制数据"}},[a._v("#")]),a._v(" 获取录制数据")]),a._v(" "),e("p",[a._v("通过监听 MediaRecorder 实例的 ondataavailable 事件获取数据，事件对象中的 data 属性即录制的数据（blob）。")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("mediaRecorder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("ondataavailable")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  blobData "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("h2",{attrs:{id:"mediastream-媒体流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mediastream-媒体流"}},[a._v("#")]),a._v(" MediaStream 媒体流")]),a._v(" "),e("p",[a._v("MediaStream 接口是一个媒体内容的流。一个流包含几个轨道，比如视频和音频轨道。")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MediaStream",target:"_blank",rel:"noopener noreferrer"}},[a._v("MediaStream"),e("OutboundLink")],1)]),a._v(" "),e("h2",{attrs:{id:"录制过程概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#录制过程概述"}},[a._v("#")]),a._v(" 录制过程概述")]),a._v(" "),e("p",[a._v("记录一个流的过程是非常容易的：")]),a._v(" "),e("ol",[e("li",[a._v("建立一个 MediaStream 或者 HTMLMediaElement （以 "),e("code",[a._v("<audio>")]),a._v(" 或 "),e("code",[a._v("<video>")]),a._v(" 元素的形式） 来充当媒体数据的源。")]),a._v(" "),e("li",[a._v("创建一个 MediaRecorder 对象，指定源（MediaStream）以及配置项 （录制器的 MIME 类型或它轨道所需的比特率）。")]),a._v(" "),e("li",[a._v("设置 MediaRecorder.dataavailable 事件处理函数（实例），会在数据可利用时候调用。")]),a._v(" "),e("li",[a._v("使用 MediaRecorder.start() 开始录制。")]),a._v(" "),e("li",[a._v("调用 MediaRecorder.stop 方法结束录制，自动触发 MediaRecorder.dataavailable 事件。")]),a._v(" "),e("li",[a._v("MediaRecorder.dataavailable 的事件对象中有一个 data 属性，它的值为已录制媒体的 Blob 数据。")])]),a._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MediaRecorder",target:"_blank",rel:"noopener noreferrer"}},[a._v("MediaRecorder"),e("OutboundLink")],1)]),a._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices",target:"_blank",rel:"noopener noreferrer"}},[a._v("MediaDevices"),e("OutboundLink")],1)]),a._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/MediaStream_Recording_API",target:"_blank",rel:"noopener noreferrer"}},[a._v("MediaStream Recording API"),e("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);