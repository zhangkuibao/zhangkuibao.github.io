(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{815:function(t,s,a){"use strict";a.r(s);var e=a(12),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"router-link-标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#router-link-标签"}},[t._v("#")]),t._v(" router-link 标签")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("tag")]),t._v(": 生成指定标签,默认"),a("code",[t._v("<a>")]),t._v("标签")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("to")]),t._v(" : 目标路由的链接,被点击后内部会把 "),a("code",[t._v("to")]),t._v(" 的值传递给 "),a("code",[t._v("route.push()")]),t._v(" , 可以传入字符串或描述目标位置的对象")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("replace")]),t._v(" 默认 false,设置该属性跳转时会用 "),a("code",[t._v("router.replace()")]),t._v(" 替换 "),a("code",[t._v("route.push()")]),t._v(",不会留下"),a("code",[t._v("history记录")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("append")]),t._v(" 默认 false,设置该属性跳转时相当于一个相对路径跳转(把这个 url 拼接到当前 url 后面), 不设置时为绝对路径")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("event")]),t._v(" 默认为 "),a("code",[t._v("click")]),t._v(", 设置用来触发导航的事件类型,可以是一个字符串或包含字符串的数组")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("exact")]),t._v(" 默认 false,是否使用'精确匹配模式', 默认情况下只要当前 url 包含 link 标签的路径就会被设置"),a("code",[t._v("active-class")]),t._v("类名")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("active-class")]),t._v(" 默认 "),a("code",[t._v("router-link-active")]),t._v(" ,链接激活时的 class,可在路由配置中通过 "),a("code",[t._v("linkActiveClass")]),t._v(" 属性来设置")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("exact-active-class")]),t._v(" 默认 "),a("code",[t._v("router-link-exact-active")]),t._v(" ,路由被精确匹配时激活的 class,可在路由配置中的"),a("code",[t._v("linkExactActiveClass")]),t._v("属性配置")]),t._v(" "),a("p",[t._v("两个 class 属性的区别:")]),t._v(" "),a("p",[a("code",[t._v("linkActiveClass")]),t._v(" 这个属性定义的是只要匹配到的路由"),a("code",[t._v("(to.matched 中有记录的)")]),t._v("都会添加一个 class")]),t._v(" "),a("p",[a("code",[t._v("linkExactActiveClass")]),t._v(" 定义的是给匹配到的最后一个路由"),a("code",[t._v("(to.matched 中最后一个记录)")]),t._v("添加一个 class")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("to root"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("login"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/login"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("to login"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// html中的两个链接分别记为 #root 和 #login")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义一个带子路由的路由")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问 '/' 时,可以匹配的路由只有一个, 此时 #root 的class为: 'iActive iExact'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问 '/login' 时,匹配的路由有两个, 此时 #root 的class为: 'iActive', #login 的class 为'iActive iExact'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以看出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// linkActiveClass 这个属性定义的是只要匹配到的路由(to.matched 中有记录的)都会添加一个class, 如果给<router-link>标签设置exact属性会开启精确匹配模式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// linkExactActiveClass 定义的是给匹配到的最后一个路由(to.matched 中最后一个记录)添加一个class")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("linkActiveClass")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iActive"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("linkExactActiveClass")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iExact"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("routes")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"router-view-标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#router-view-标签"}},[t._v("#")]),t._v(" router-view 标签")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("<router-view>")]),t._v(" 用于渲染路由匹配到的组件"),a("br"),t._v("\n非"),a("code",[t._v("<router-view>")]),t._v("使用的属性会传给渲染的组件"),a("br"),t._v("\n可以配合 "),a("code",[t._v("<transition>")]),t._v(" 和 "),a("code",[t._v("<keep-alive>")]),t._v(" 使用,如果两个结合一起用,要确保在内层使用 "),a("code",[t._v("<keep-alive>")]),a("br"),t._v(" "),a("code",[t._v("name")]),t._v(" 默认 "),a("code",[t._v("default")]),t._v(",定义视图的名字,在 components 中定义每个视图要渲染的组件")])]),t._v(" "),a("h2",{attrs:{id:"router-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#router-对象"}},[t._v("#")]),t._v(" Router 对象")]),t._v(" "),a("h3",{attrs:{id:"构建-router-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建-router-对象"}},[t._v("#")]),t._v(" 构建 Router 对象")]),t._v(" "),a("p",[t._v("用 "),a("code",[t._v("VueRouter")]),t._v(" 构造函数 "),a("code",[t._v("new")]),t._v(" 一个新的路由对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mode 默认 [hash (浏览器环境) | abstract (nodeJS环境)], 可选值: hash |  abstract | history(利用history.pushState)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("mode")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认 `/`, 设置基路径")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("base")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 活动class(默认 router-link-active )和精准匹配class(默认 router-link-exact-active )")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("linkActiveClass")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'iActive'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("linkExactActiveClass")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'iExact'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 控制滚动行为")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("scrollBehavior")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("savedPosition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("y")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为true, 不支持history模式时是否回退到hash模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fallback")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// routes 中的每一项都是一个路由对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("routes")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由地址")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由匹配后的渲染组件")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div>root</div>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名路由")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重定向")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("redirect")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// props替代$route.params解耦")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 别名")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("alias")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/index'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 嵌套路由")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部导航守卫")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("beforeEnter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路由元信息,裹挟一些属性,可做校验用")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.6.0+")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配规则是否大小写敏感,默认false")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("caseSensitive")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译正则")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pathToRegexpOptions")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"router-实例属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#router-实例属性"}},[t._v("#")]),t._v(" Router 实例属性")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("router.app")]),t._v(" 挂载 router 的 Vue 根实例")]),t._v(" "),a("li",[a("code",[t._v("router.mode")]),t._v(" 路由使用的模式")]),t._v(" "),a("li",[a("code",[t._v("router.currentRoute")]),t._v(" 当前路由的路由对象")])]),t._v(" "),a("h3",{attrs:{id:"router-实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#router-实例方法"}},[t._v("#")]),t._v(" Router 实例方法")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("守卫, 在 "),a("code",[t._v("2.5.0+")]),t._v(" 这三个方法都返回一个移除已注册的守卫/钩子的函数\n"),a("code",[t._v("router.beforeEach((to, from, next) => {})")]),t._v(" "),a("code",[t._v("router.beforeResolve((to, from, next) => {})")]),t._v(" "),a("code",[t._v("router.afterEach((to, from) => {})")])])]),t._v(" "),a("li",[a("p",[t._v("导航\n"),a("code",[t._v("router.push('/')")]),t._v(" 跳转到指定链接并在 "),a("code",[t._v("history")]),t._v(" 栈中添加一条记录, 点击"),a("code",[t._v("<router-link>")]),t._v("时默认调用该方法\n"),a("code",[t._v("router.replace('/')")]),t._v(" 同上,不会添加记录\n"),a("code",[t._v("router.go(1)")]),t._v(" 在 "),a("code",[t._v("history")]),t._v(" 栈中前进/回退指定数\n"),a("code",[t._v("router.back()")]),t._v(" 在"),a("code",[t._v("history")]),t._v("栈中回退一步\n"),a("code",[t._v("router.forward()")]),t._v(" 在"),a("code",[t._v("history")]),t._v("栈中前进一步")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("router.addRoutes()")]),t._v(" 动态添加一条路由信息")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("router.getMatchedComponents('/')")]),t._v(" 返回目标位置或当前位置(不传参)匹配到的组件数组")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("router.resolve('/')")]),t._v(" 解析目标位置,参数必填")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("router.onReady()")]),t._v(" 在路由完成初始导航时调用")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("router.onError()")]),t._v(" 在路由导航过程中出错时被调用,可被触发的错误如下:\n错误在一个路由守卫函数中被同步抛出；\n错误在一个路由守卫函数中通过调用 next(err) 的方式异步捕获并处理；\n渲染一个路由的过程中，需要尝试解析一个异步组件时发生错误。")])])]),t._v(" "),a("h2",{attrs:{id:"route-路由对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#route-路由对象属性"}},[t._v("#")]),t._v(" $route 路由对象属性")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("$route.path")]),t._v(" 路由对象的绝对路径")]),t._v(" "),a("li",[a("code",[t._v("$route.params")]),t._v(" 路由对象包含的参数对象")]),t._v(" "),a("li",[a("code",[t._v("$route.query")]),t._v(" 路由对象的 url 查询参数解析后的对象")]),t._v(" "),a("li",[a("code",[t._v("$route.hash")]),t._v(" 路由对象的 "),a("code",[t._v("hash")]),t._v(" 值(带#)")]),t._v(" "),a("li",[a("code",[t._v("$route.fullPath")]),t._v(" 完成解析后的完整 url,包含查询参数和 "),a("code",[t._v("hash")])]),t._v(" "),a("li",[a("code",[t._v("$route.matched")]),t._v(" 所有匹配路由的路由记录数组,每个记录都是一个路由对象")]),t._v(" "),a("li",[a("code",[t._v("$route.name")]),t._v(" 路由的名称")]),t._v(" "),a("li",[a("code",[t._v("$route.redirectedFrom")]),t._v(" 路由重定向前的 url 地址")])]),t._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("p",[t._v("在 Vue 根实例的 router 配置传入 router 实例,会在每个子组件中注入两个属性")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("this.$router")]),t._v(" router 实例")]),t._v(" "),a("li",[a("code",[t._v("this.$route")]),t._v(" 当前路由对象")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("router")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);