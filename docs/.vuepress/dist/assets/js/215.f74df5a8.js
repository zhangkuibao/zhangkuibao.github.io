(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{865:function(s,t,a){"use strict";a.r(t);var e=a(12),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("process 对象提供有关当前 Node.js 进程的信息并对其进行控制。")]),s._v(" "),a("p",[s._v("process 对象全局可用，可以不经声明使用。")]),s._v(" "),a("p",[s._v("process 对象是 EventEmitter 的实例。")]),s._v(" "),a("h2",{attrs:{id:"摘要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#摘要"}},[s._v("#")]),s._v(" 摘要")]),s._v(" "),a("p",[s._v("exitCode 默认状态码为 0，按照惯例，除 0 之外的任何退出码都表示错误。")]),s._v(" "),a("p",[s._v("process.env 对象上保存着环境变量。")]),s._v(" "),a("h2",{attrs:{id:"引用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用方式"}},[s._v("#")]),s._v(" 引用方式")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" process "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"process"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[s._v("#")]),s._v(" 事件")]),s._v(" "),a("h3",{attrs:{id:"exit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exit"}},[s._v("#")]),s._v(" exit")]),s._v(" "),a("p",[s._v("监听进程退出事件，code 为退出时的状态码，默认为 0。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"exit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"code"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"方法及属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法及属性"}},[s._v("#")]),s._v(" 方法及属性")]),s._v(" "),a("h3",{attrs:{id:"process-argv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-argv"}},[s._v("#")]),s._v(" process.argv")]),s._v(" "),a("p",[s._v("返回参数"),a("strong",[s._v("数组")]),s._v("，第一个元素为 "),a("a",{attrs:{href:"#processexecpath"}},[s._v("process.execPath")])]),s._v(" "),a("p",[s._v("第二个元素为正在执行的 JS 文件的路径。")]),s._v(" "),a("p",[s._v("后续元素为命令行参数，在命令行中用空格分隔参数。")]),s._v(" "),a("ul",[a("li",[s._v("命令行中执行")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v(" index "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("code")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("status")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])])]),a("ul",[a("li",[s._v("index.js")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   'D:\\\\application\\\\develop\\\\node\\\\node.exe',")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   'D:\\\\code\\\\test\\\\test-node\\\\index',")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   'code=2',")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   'status=3'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ]")]),s._v("\n")])])]),a("h3",{attrs:{id:"process-execpath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-execpath"}},[s._v("#")]),s._v(" process.execPath")]),s._v(" "),a("p",[s._v("process.execPath 属性返回启动 Node.js 进程的可执行文件的绝对路径名。 符号链接（如果有）会被解析。")]),s._v(" "),a("h3",{attrs:{id:"process-env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-env"}},[s._v("#")]),s._v(" process.env")]),s._v(" "),a("p",[s._v("process.env 属性返回包含用户环境变量的对象。")]),s._v(" "),a("p",[s._v("可以使用 "),a("code",[s._v("cross-env")]),s._v(" 包为 node 程序跨平台添加环境变量。")]),s._v(" "),a("p",[a("code",[s._v("cross-env status=2 node index")])]),s._v(" "),a("h3",{attrs:{id:"process-pid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-pid"}},[s._v("#")]),s._v(" process.pid")]),s._v(" "),a("p",[s._v("process.pid 属性返回进程的 PID。")]),s._v(" "),a("h3",{attrs:{id:"process-cwd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-cwd"}},[s._v("#")]),s._v(" process.cwd()")]),s._v(" "),a("p",[s._v("返回当前 node 进程的工作目录。")]),s._v(" "),a("h3",{attrs:{id:"process-nexttick-callback-args"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-nexttick-callback-args"}},[s._v("#")]),s._v(" process.nextTick(callback, ...args?)")]),s._v(" "),a("p",[s._v('process.nextTick() 将 callback 添加到"下一个滴答队列"。')]),s._v(" "),a("h3",{attrs:{id:"queuemicrotask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queuemicrotask"}},[s._v("#")]),s._v(" queueMicrotask()")]),s._v(" "),a("p",[s._v("queueMicrotask() API 是 process.nextTick() 的替代方案。")]),s._v(" "),a("p",[s._v("queueMicrotask 被用于 then、catch 和 finally 函数的回调。")]),s._v(" "),a("h3",{attrs:{id:"process-exit-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-exit-code"}},[s._v("#")]),s._v(" process.exit(code?)")]),s._v(" "),a("p",[s._v("终止进程，code 会被传给 exit 事件。")]),s._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api/process.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("process"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);