(window.webpackJsonp=window.webpackJsonp||[]).push([[229],{879:function(s,t,a){"use strict";a.r(t);var e=a(12),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("glob 是由普通字符或通配符组成的字符串，用于匹配文件路径。")]),s._v(" "),a("p",[s._v("可以利用一个或多个 glob 在文件系统中定位文件。")]),s._v(" "),a("p",[s._v("当使用 glob 数组时，将按照每个 glob 在数组中的位置依次执行匹配。")]),s._v(" "),a("h2",{attrs:{id:"分隔符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分隔符"}},[s._v("#")]),s._v(" 分隔符")]),s._v(" "),a("p",[s._v("glob 中用 "),a("code",[s._v("/")]),s._v(" 表示分隔符。用 "),a("code",[s._v("\\\\")]),s._v(" 表示转义符。")]),s._v(" "),a("p",[s._v("避免使用 Node 的 path 类方法来创建 glob，例如 path.join。")]),s._v(" "),a("p",[s._v("如下， "),a("code",[s._v("*")]),s._v(" 被转义了，因此，"),a("code",[s._v("*")]),s._v(" 将被作为一个普通字符使用，而不再是通配符了。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"glob_with_uncommon_\\\\*_character.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"特殊字符-一个星号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊字符-一个星号"}},[s._v("#")]),s._v(" 特殊字符："),a("code",[s._v("*")]),s._v("（一个星号）")]),s._v(" "),a("p",[s._v("在一个字符串片段中匹配任意数量的字符，包括零个匹配。")]),s._v(" "),a("p",[s._v("对于匹配单级目录下的文件很有用。")]),s._v(" "),a("p",[s._v("下面这个 glob 能够匹配类似 index.js 的文件，但是不能匹配类似 scripts/index.js 或 scripts/nested/index.js 的文件。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"特殊字符-两个星号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊字符-两个星号"}},[s._v("#")]),s._v(" 特殊字符： "),a("code",[s._v("**")]),s._v(" (两个星号)")]),s._v(" "),a("p",[s._v("在多个字符串片段中匹配任意数量的字符，包括零个匹配。")]),s._v(" "),a("p",[s._v("对于匹配嵌套目录下的文件很有用。")]),s._v(" "),a("p",[s._v("下面这个 glob 可以匹配 "),a("code",[s._v("scripts/")]),s._v(" 目录下的所有 "),a("code",[s._v(".js")]),s._v(" 后缀文件。它将匹配类似 "),a("code",[s._v("scripts/index.js")]),s._v("、"),a("code",[s._v("scripts/nested/index.js")]),s._v(" 和 "),a("code",[s._v("scripts/nested/twice/index.js")]),s._v(" 的文件。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripts/**/*.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"特殊字符-取反"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊字符-取反"}},[s._v("#")]),s._v(" 特殊字符： ! (取反)")]),s._v(" "),a("p",[s._v("由于 glob 匹配时是按照每个 glob 在数组中的位置依次进行匹配操作的，所以 glob 数组中的取反（negative）glob 之前必须有一个非取反（non-negative）的 glob。")]),s._v(" "),a("p",[s._v("第一个 glob 匹配到一组匹配项，然后后面的取反 glob 删除这些匹配项中的一部分。")]),s._v(" "),a("p",[s._v("如果取反 glob 只是由普通字符组成的字符串，则执行效率是最高的。")]),s._v(" "),a("p",[s._v("下面的 glob 组合将匹配当前目录下所有的 "),a("code",[s._v("json")]),s._v(" 文件和文件名不为 "),a("code",[s._v("gulpfile")]),s._v(" 的所有 "),a("code",[s._v("js")]),s._v(" 文件。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./*.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./*.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!gulpfile*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("取反（negative） glob 可以作为对带有两个星号的 glob 的限制手段。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"**/*.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!node_modules/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"匹配重叠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配重叠"}},[s._v("#")]),s._v(" 匹配重叠")]),s._v(" "),a("p",[s._v("一个文件被多个 glob 匹配时改文件就被认为是匹配重叠了。")]),s._v(" "),a("p",[s._v("如果在同一个 "),a("code",[s._v("src()")]),s._v(" 中使用了会产生匹配重叠的 glob，gulp 将尽力去除重叠部分，但是在多个 "),a("code",[s._v("src()")]),s._v(" 调用时产生的匹配重叠是不会被去重的。")])])}),[],!1,null,null,null);t.default=n.exports}}]);