(window.webpackJsonp=window.webpackJsonp||[]).push([[249],{899:function(a,t,e){"use strict";e.r(t);var s=e(12),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"占位符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#占位符"}},[a._v("#")]),a._v(" 占位符")]),a._v(" "),e("p",[a._v("string = '[id].js' function (pathData, assetInfo) => string")]),a._v(" "),e("p",[a._v("此选项决定了非初始（non-initial）chunk 文件的名称。有关可取的值的详细信息，请查看 output.filename 选项。")]),a._v(" "),e("p",[a._v("注意，这些文件名需要在运行时根据 chunk 发送的请求去生成。因此，需要在 webpack runtime 输出 bundle 值时，将 chunk id 的值对应映射到占位符(如 [name] 和 [chunkhash])。这会增加文件大小，并且在任何 chunk 的占位符值修改后，都会使 bundle 失效。")]),a._v(" "),e("p",[a._v("默认使用 [id].js 或从 output.filename 中推断出的值（[name] 会被预先替换为 [id] 或 [id].）。")]),a._v(" "),e("h3",{attrs:{id:"可用占位符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可用占位符"}},[a._v("#")]),a._v(" 可用占位符")]),a._v(" "),e("p",[a._v("filename 可用变量：[name],[hash],[chunkhash]\nchunkFilename 可用变量：[id],[name],[hash],[chunkhash]\nsourceMapFilename 可用变量：[file],[id],[hash]\nlibraryTarget 可选值：'var'(default),'this','commentjs','commentjs2','amd','umd'")]),a._v(" "),e("h2",{attrs:{id:"魔法注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#魔法注释"}},[a._v("#")]),a._v(" 魔法注释")]),a._v(" "),e("p",[a._v("https://webpack.docschina.org/api/module-methods/#magic-comments")]),a._v(" "),e("h2",{attrs:{id:"source-map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#source-map"}},[a._v("#")]),a._v(" source map")]),a._v(" "),e("p",[a._v("将编译后的代码映射回原始源代码")]),a._v(" "),e("h2",{attrs:{id:"manifest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#manifest"}},[a._v("#")]),a._v(" manifest")]),a._v(" "),e("p",[a._v('当 compiler 开始执行、解析和映射应用程序时，它会保留所有模块的详细要点。这个数据集合称为 "manifest"，当完成打包并发送到浏览器时，runtime 会通过 manifest 来解析和加载模块。')])])}),[],!1,null,null,null);t.default=n.exports}}]);