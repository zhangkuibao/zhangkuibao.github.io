(window.webpackJsonp=window.webpackJsonp||[]).push([[294],{944:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"http-压缩与-gzip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-压缩与-gzip"}},[t._v("#")]),t._v(" http 压缩与 gzip")]),t._v(" "),a("p",[t._v("http 压缩指的是 Web 服务器和浏览器之间压缩传输"),a("strong",[t._v("文本内容")]),t._v("的方法，对传输内容进行压缩可以提高网页加载资源的速度，同时会增加服务器的开销。")]),t._v(" "),a("p",[t._v("gzip 是 http 压缩采用的一种压缩算法。")]),t._v(" "),a("h2",{attrs:{id:"gzip-压缩过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gzip-压缩过程"}},[t._v("#")]),t._v(" gzip 压缩过程")]),t._v(" "),a("ol",[a("li",[t._v("客户端 http 请求头中用 Accept-Encoding 字段声明浏览器支持的压缩方式，如 "),a("code",[t._v("Accept-Encoding:gzip")]),t._v("。")]),t._v(" "),a("li",[t._v("服务端配置启用压缩，压缩的文件类型，压缩方式。")]),t._v(" "),a("li",[t._v("服务端接收到请求时解析请求头，如果客户端支持 gzip 压缩，响应时对请求的资源进行压缩并返回给客户端，响应头中加入 content-encoding 字段表示压缩方式 "),a("code",[t._v("content-encoding:gzip")]),t._v("。")]),t._v(" "),a("li",[t._v("浏览器接收到响应时按照 Content-Encoding 传递的方式解码并使用资源。")])]),t._v(" "),a("h2",{attrs:{id:"gzip-优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gzip-优缺点"}},[t._v("#")]),t._v(" gzip 优缺点")]),t._v(" "),a("p",[t._v("gzip 压缩后可以提高资源传输效率，但是会提高对服务器的负担。")]),t._v(" "),a("p",[t._v("在传输过程中压缩文件耗费 CPU 但是节省带宽（用空间换时间）。")]),t._v(" "),a("p",[t._v("gzip 无法压缩图片。")]),t._v(" "),a("h2",{attrs:{id:"在-chrome-浏览器中查看-gzip-压缩效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-chrome-浏览器中查看-gzip-压缩效果"}},[t._v("#")]),t._v(" 在 chrome 浏览器中查看 gzip 压缩效果")]),t._v(" "),a("p",[t._v("在 chrome 浏览器的 network 标签中可以看到加载 js 文件的请求，size 列中上面数值表示经过压缩后的文件大小，下面的数值表示源文件大小。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/gzip%E5%8E%8B%E7%BC%A9-chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E6%9F%A5%E7%9C%8Bgzip.png",alt:"在chrome浏览器中查看gzip"}})]),t._v(" "),a("h2",{attrs:{id:"如何启用-gzip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何启用-gzip"}},[t._v("#")]),t._v(" 如何启用 gzip")]),t._v(" "),a("p",[t._v("对于客户端来说只需要确定浏览器是否支持 gzip 压缩并在打包工具中设置打包方式正确生成 gz 文件即可，启用 gzip 主要在服务端。")]),t._v(" "),a("h3",{attrs:{id:"webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),a("p",[t._v("在 webpack 中配置 gzip 压缩。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CompressionWebpackPlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compression-webpack-plugin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nplugins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompressionWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("asset")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[path].gz[query]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 目标文件名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("algorithm")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gzip"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用gzip压缩")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\.(js|css)$"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 压缩 js 与 css")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("threshold")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10240")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 资源文件大于10240B=10kB时会被压缩")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("minRatio")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最小压缩比达到0.8时才会被压缩")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"express"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express"}},[t._v("#")]),t._v(" express")]),t._v(" "),a("p",[t._v("在 express 中启用 gzip：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" compression "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compression"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//尽量在其他中间件前使用compression")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("对请求进行过滤：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" shouldCompress "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldCompress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x-no-compression"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里就过滤掉了请求头包含'x-no-compression'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" compression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" nginx")]),t._v(" "),a("p",[t._v("在 nginx 中配置开启 gzip 压缩。")]),t._v(" "),a("p",[t._v("gzip 使用环境：http，server，location，if(x)，一般把它定义在 nginx.conf 的 http{……}之间。")]),t._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('gzip on\n# on为启用，off为关闭\ngzip_min_length 1k\n# 设置允许压缩的页面最小字节数，页面字节数从header头中的Content-Length中进行获取。默认值是0，不管页面多大都压缩。建议设置成大于1k的字节数，小于1k可能会越压越大。\ngzip_buffers 4 16k\n# 获取多少内存用于缓存压缩结果，‘4 16k’表示以16k*4为单位获得\ngzip_comp_level 5\n# gzip压缩比（1~9），越小压缩效果越差，但是越大处理越慢，所以一般取中间值;\ngzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php\n# 对特定的MIME类型生效,其中\'text/html\'被系统强制启用\ngzip_http_version 1.1\n# 识别http协议的版本,早起浏览器可能不支持gzip自解压,用户会看到乱码\ngzip_vary on\n# 启用应答头"Vary: Accept-Encoding"\ngzip_proxied off\n# nginx做为反向代理时启用\n# off(关闭所有代理结果的数据的压缩)\n# expired(启用压缩,如果header头中包括"Expires"头信息)\n# no-cache(启用压缩,header头中包含"Cache-Control:no-cache")\n# no-store(启用压缩,header头中包含"Cache-Control:no-store")\n# private(启用压缩,header头中包含"Cache-Control:private")\n# no_last_modefied(启用压缩,header头中不包含"Last-Modified")\n# no_etag(启用压缩,如果header头中不包含"Etag"头信息)\n# auth(启用压缩,如果header头中包含"Authorization"头信息)\ngzip_disable msie6\n# (IE5.5和IE6 SP1使用msie6参数来禁止gzip压缩 )指定哪些不需要gzip压缩的浏览器(将和User-Agents进行匹配),依赖于PCRE库\n')])])]),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/style-hyh/p/10395410.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化之 gzip"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/LO-ME/p/7377082.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP 压缩开启 gzip"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);