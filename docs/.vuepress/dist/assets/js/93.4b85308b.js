(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{743:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("p",[t._v("变量通过 "),a("code",[t._v("@")]),t._v(" 定义, 变量有类似预编译的过程, 无需在使用前声明, 多次定义时以后定义的为准, 沿作用域向上寻找")]),t._v(" "),a("h3",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[a("code",[t._v("@link-color: #428bca;")])]),t._v(" "),a("h3",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("h4",{attrs:{id:"属性值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性值"}},[t._v("#")]),t._v(" 属性值")]),t._v(" "),a("ol",[a("li",[t._v("属性值: 当做属性值使用时直接引用"),a("code",[t._v("@color: #fff")]),t._v(", "),a("code",[t._v("color: @color")])]),t._v(" "),a("li",[t._v("可使用运算符计算: "),a("code",[t._v("background: @color + #111;")])])]),t._v(" "),a("h4",{attrs:{id:"插值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插值"}},[t._v("#")]),t._v(" 插值")]),t._v(" "),a("p",[t._v("用作插值时需要通过 "),a("code",[t._v("@{}")]),t._v(" 的形式引入")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("选择器: "),a("code",[t._v("@className: wrapper")]),t._v(", "),a("code",[t._v(".@{className} {}")])])]),t._v(" "),a("li",[a("p",[t._v("地址: "),a("code",[t._v("@img: '../img'")]),t._v(", "),a("code",[t._v("background: url('@{img}/bg.png')")])])]),t._v(" "),a("li",[a("p",[t._v("导入文件路径: "),a("code",[t._v("@themes: '../src'")]),t._v(", "),a("code",[t._v("@import '@{themes}/index.less'")])])]),t._v(" "),a("li",[a("p",[t._v("属性名: "),a("code",[t._v("@property: color")]),t._v(", "),a("code",[t._v("* { @{property}: @fff; }")])])]),t._v(" "),a("li",[a("p",[t._v("变量名:")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// less 语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@fnord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am fnord."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fnord"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@@var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i am fnord"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"延伸-extend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延伸-extend"}},[t._v("#")]),t._v(" 延伸（extend）")]),t._v(" "),a("p",[t._v("给当前选择器适配对应选择器的规则集, 将当前选择器添加到以定义的规则集中, 而不是引用扩展, 也就是把目标选择器(严格)下的规则继承到当前选择器上")]),t._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("blockquote",[a("p",[t._v("扩展必须在选择器的最后一个 "),a("code",[t._v("a:hover:extend(div b).nth-child(odd)")]),t._v(", 这是不允许的\n扩展是严格匹配的, 没有定义的选择器无法被扩展, 选择器 "),a("code",[t._v("link:hover:visited")]),t._v(" 和"),a("code",[t._v("link:visited:hover")]),t._v("匹配相同的元素集，但 extend 将它们视为不同的元素\n无法匹配带有变量的选择器")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("放到选择器上, 以伪类形式使用 "),a("code",[t._v(".a:extend(.b) {}")])])]),t._v(" "),a("li",[a("p",[t._v("放到规则集中, "),a("code",[t._v(".a { &:extend(.b) }")])]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// less语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  &"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(".a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前选择器适配 .a 的样式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  &"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(".b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".a,\n.b,\n.c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".b.c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("允许多个扩展, 用逗号分隔, "),a("code",[t._v(".a { &:extend(.b, .c) }")]),t._v(" 或 "),a("code",[t._v(".a { &:extend(.b):extend(.c) }")])])]),t._v(" "),a("li",[a("p",[t._v("能够匹配嵌套的"),a("strong",[t._v("复杂选择器")]),t._v(", 如: "),a("code",[t._v("a:hover:extend(div b)")]),t._v(", 但是必须定义以 "),a("code",[t._v("div b")]),t._v(" 为选择器的规则集")])]),t._v(" "),a("li",[a("p",[t._v("扩展全部(搜索并替换), 在参数的最后指定 all 关键字时, 效果等同于将当前选择器替换到对应位置")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// less语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".a.b.test,\n.test.c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("&:hover")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".replacement:extend(.test all)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".a.b.test,\n.test.c,\n.a.b.replacement,\n.replacement.c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".test:hover,\n.replacement:hover")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在 "),a("code",[t._v("@media")]),t._v(" 中进行扩展时只与统一媒体声明内的选择器匹配")])])]),t._v(" "),a("h3",{attrs:{id:"用例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例"}},[t._v("#")]),t._v(" 用例")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("避免添加基类")]),t._v(", 如果有一系列元素需要统一样式并且拥有自己的样式, 就可以用 "),a("code",[t._v("extend")]),t._v(" 将统一样式扩展到独特元素上, 而不是在 "),a("code",[t._v("html")]),t._v(" 中通过添加相同的 "),a("code",[t._v("class")]),t._v(" 来实现")]),t._v(" "),a("li",[t._v("替代混入, 对于需要统一样式的元素来说, 不需要先定义一个混入规则集再一一添加进去, 只需要定义一个选择器的规则集, 其他选择器扩展这个规则集就行")])]),t._v(" "),a("h2",{attrs:{id:"混入-mixin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混入-mixin"}},[t._v("#")]),t._v(" 混入（mixin）")]),t._v(" "),a("blockquote",[a("p",[t._v("调用 "),a("code",[t._v("mixin")]),t._v(" 时, 括号是可选的\n创建 "),a("code",[t._v("mixin")]),t._v(" 但又不想输出改 "),a("code",[t._v("minxin")]),t._v(" 时, 可以在定义时的选择器后加括号\n"),a("code",[t._v("mixin")]),t._v(" 中的内容都会被加入到被调用的地方")])]),t._v(" "),a("h3",{attrs:{id:"定义-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-2"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("混合使用类选择器和 id 选择器")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// less语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".a,\n#b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mixin-class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token mixin-usage function"}},[t._v(".a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mixin-id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token mixin-usage function"}},[t._v("#b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".a,\n#b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mixin-class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mixin-id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在混入后使用 "),a("code",[t._v("!important")]),t._v(" 关键字会将其继承的所有属性标记为 "),a("code",[t._v("!important")]),t._v(", "),a("code",[t._v(".a { .mix2(#000) !important }")])])])]),t._v(" "),a("h3",{attrs:{id:"命名空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名空间"}},[t._v("#")]),t._v(" 命名空间")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("```less\n#outer {\n\t.inner {\n\t\tcolor: red;\n\t}\n}\n\n.c {\n\t#outer > .inner;\n}\n```\n")])])]),a("h3",{attrs:{id:"参数混入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数混入"}},[t._v("#")]),t._v(" 参数混入")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("接收参数")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mix1("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@bg")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义变量名")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@bg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".min2("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@bg")]),t._v(":#333)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置默认值")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@bg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mix3("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@bg")]),t._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@color")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mix4("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@border")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@type")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@color")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@arguments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @arguments 在 mixin 中是特殊变量, 包含调用 mixin 时传递的所有参数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mix5("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@a")]),t._v("; "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@rest")]),t._v("...)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用 ... 来定义可接收多个参数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @rest is bound to arguments after @a")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @arguments is bound to all arguments")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token mixin-usage function"}},[t._v(".mix2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("#000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果定义了参数会覆盖默认值")]),t._v("\n  ."),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mix3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    #987"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    #eee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 1 1\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多个参数可以用分号或逗号分隔(不能混用), 使用分号进行分隔时可以接收以逗号分隔的参数列表,")]),t._v("\n  ."),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mix3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),t._v("#333"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    3\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数可以通过名称传入, 其他未命名的参数在传入后会按照顺序接收(不包括命名参数), 数量必须与定义时一致")]),t._v("\n  ."),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mix4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" #000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("模式匹配, 根据参数不同更改混入的行为")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// less 语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@switch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),t._v(" light"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mixin(dark; "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@color")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("darken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mixin(light; "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@color")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lighten")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".mixin("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@_")]),t._v("; "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@color")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配所有模式")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token mixin-usage function"}},[t._v(".mixin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" #888"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配对应的混入对象")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .mixin(light; #888); // 直接写入对应类型也可以")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #a2a2a2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"函数式调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数式调用"}},[t._v("#")]),t._v(" 函数式调用")]),t._v(" "),a("p",[t._v("混入中定义的变量在混入后是可见的, 可以在调用者的作用域中使用(调用作用域定义同名变量时不会被混入变量覆盖), 因此可以让混入对象对参数做一些处理, 以达到封装功能的效果")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("```less\n.average(@x, @y) { // 接收两个参数\n\t@average: ((@x + @y) / 2); // 处理参数并定义为变量\n\n\t.mix1() {  // 在 mixin 中定义的 mixin 也会被定义在调用者作用域中(注意不加括号的话会直接添加到css中)\n\t\tcolor: red;\n\t}\n}\n\n@average: 50px; // 父级作用域中定义的同名变量会被覆盖\n\ndiv {\n\t.average(16px, 50px);\n\tpadding: @average;    // 使用混入对象中定义的变量\n\t// @average: 100px; // 如果当前作用域中有同名变量, 以作用域中定义的为准\n}\n```\n")])])]),a("h3",{attrs:{id:"条件混入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件混入"}},[t._v("#")]),t._v(" 条件混入")]),t._v(" "),a("p",[t._v("受保护的 "),a("code",[t._v("mixin")]),t._v(", 类似于 "),a("code",[t._v("@media")]),t._v(" 的条件查询语句, 条件可以写在定义混入或引用混入的后面")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("```less\n\t@mode:1;\n\t@arg: 1;\n\t// 定义混入时限定条件\n\t.a() when(@mode=1) { // 在@mode等于1的时候才允许被混入\n\t\tbackground: #fff;\n\t}\n\t.a() when(default()) { // 调用时所有条件都不符合时引用该样式, 类似于 default / else\n\t\tcolor: red;\n\t}\n\t.b {\n\t\t.a() when (@mode>=1); // 可以使用逻辑运算符\n\t\t.a() when (@mode=1) and (@arg=2); // 用 and 连接条件, 相当于 &&\n\t\t.a() when (@mode=1), (@arg=2); // 用逗号模拟 or , 相当于 ||\n\t\t.a() when not (@mode=1); // 用 not 关键字来否定条件\n\t}\n\n```\n")])])]),a("ol",[a("li",[a("p",[t._v("类型检查函数:\n"),a("code",[t._v("iscolor()")]),t._v(" "),a("code",[t._v("isnumber()")]),t._v(" "),a("code",[t._v("isstring()")]),t._v(" "),a("code",[t._v("iskeyword()")]),t._v(" "),a("code",[t._v("isurl()")])])]),t._v(" "),a("li",[a("p",[t._v("检查值是否是数字, 是否使用特定单位\n"),a("code",[t._v("ispixel()")]),t._v(" "),a("code",[t._v("ispercentage()")]),t._v(" "),a("code",[t._v("isem()")]),t._v(" "),a("code",[t._v("isunit()")])])]),t._v(" "),a("li",[a("p",[t._v("递归调用")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// less语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".generate-columns("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@n")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@i")]),t._v(": 1) when ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@i")]),t._v(" =< "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@n")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".column-@{i}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 100% "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ."),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate-columns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n."),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate-columns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".column-1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 25%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".column-2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".column-3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 75%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".column-4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并"}},[t._v("#")]),t._v(" 合并")]),t._v(" "),a("p",[t._v("合并功能允许将多个属性中的值聚合到单个属性下的逗号或空格分隔的属性列表中, 对于背景和变换等属性很有用")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("```less\n.mixin() {\n\tbox-shadow+: inset 0 0 10px #555; // 属性名后面带+, 编译后属性值通过逗号连接\n\tbackground+_: url('./img/bg.png'); // 属性名后带+_, 编译后属性值通过空格连接\n}\n\n.myclass {\n\t.mixin();\n\tbox-shadow+: 0 0 20px black; // 逗号连接\n\tbackground+_:100%; // 空格连接\n}\n```\n")])])]),a("h2",{attrs:{id:"导入-import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入-import"}},[t._v("#")]),t._v(" 导入（import）")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("@import (keyword) 'filename'")]),t._v(" 注意"),a("code",[t._v("@import")]),t._v("和 "),a("code",[t._v("keyword")]),t._v(" 之间的空格")]),t._v(" "),a("li",[t._v("一个"),a("code",[t._v("@import")]),t._v(" 语句只能导入一个文件")]),t._v(" "),a("li",[t._v("可以在混入中使用 "),a("code",[t._v("@import")])])]),t._v(" "),a("h3",{attrs:{id:"选项-keyword"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项-keyword"}},[t._v("#")]),t._v(" 选项（keyword）")]),t._v(" "),a("p",[t._v("使用多个关键字时用逗号分隔")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("reference")]),t._v("：使用较少的文件，但不输出")]),t._v(" "),a("li",[a("code",[t._v("inline")]),t._v("：在输出中包含源文件，但不对其进行处理")]),t._v(" "),a("li",[a("code",[t._v("less")]),t._v("：无论文件扩展名是什么，都将其视为少文件")]),t._v(" "),a("li",[a("code",[t._v("css")]),t._v("：无论文件扩展名为什么，都将其视为 CSS 文件")]),t._v(" "),a("li",[a("code",[t._v("once")]),t._v("：仅包含一次文件（这是默认行为）")]),t._v(" "),a("li",[a("code",[t._v("multiple")]),t._v("：多次包含文件")]),t._v(" "),a("li",[a("code",[t._v("optional")]),t._v("：找不到文件时继续编译")])]),t._v(" "),a("h2",{attrs:{id:"父级选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父级选择器"}},[t._v("#")]),t._v(" 父级选择器（&）")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("&")]),t._v(" 在选择器中可以出现多次, 可以重复引用父选择器而无需重复其名称\n"),a("code",[t._v("&")]),t._v(" 代表的是所有父级选择器累加下来的选择器, 而不是最近的祖先\n可以把 "),a("code",[t._v("&")]),t._v(" 写在其他选择器后面达成特殊样式的效果 "),a("code",[t._v(".no-data &")]),t._v("\n在逗号分隔的多个选择器中多次使用 "),a("code",[t._v("&")]),t._v(";")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("```less\n// less语句\np, a, ul, li {\n\tborder-top: 2px dotted #366;\n\t& + & {  // 将会扩展为所有可能的组合\n\t\tborder-top: 0;\n\t}\n}\n\n// 输出\np,\na,\nul,\nli {\n\tborder-top: 2px dotted #366;\n}\np + p,\np + a,\np + ul,\np + li,\na + p,\na + a,\na + ul,\na + li,\nul + p,\nul + a,\nul + ul,\nul + li,\nli + p,\nli + a,\nli + ul,\nli + li {\n\tborder-top: 0;\n}\n```\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);