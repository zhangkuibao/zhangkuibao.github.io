/* 1.蛇形边框 */
@keyframes move {
    0%,100% {
        clip: rect(0px 110px 5px 0px);
    }
    25% {
        clip: rect(0px 110px 110px 105px);
    }
    50% {
        clip: rect(105px 110px 110px 0px);
    }
    75% {
        clip: rect(0px 5px 110px 0px);
    }
}

.snake {
    border: none;
    background-color: rgb(0, 238, 247);
    position: relative;
    
}
.snake::before,.snake::after{
    content: '';
    top: -5px;
    bottom: -5px;
    left: -5px;
    right: -5px;
    position: absolute;
}
.snake::before {
    border: 5px solid rgb(240, 0, 220);
    animation: move 5s linear infinite ;
    
}
.snake::after {
    border: 5px solid red;
    animation: move 5s linear infinite -2.5s;
}

/* 2.动态下划线 */
.underline {
    font-size: 20px;
    position: relative;
    height: auto;
    top:40%;
    padding-bottom: 5px;
    overflow: hidden;

}
@keyframes move1 {
    0%{
        transform: translateX(-100%)
    }
    100% {
        transform: translateX(100%)
    }

}
.underline::before  {
    content:'';
    height: 5px;
    width: 100%;
    position: absolute;
    bottom: 0px;
    transform: translate(-100%);
    background: linear-gradient(to right,red, blue);
}
.underline:hover::before {
    animation: move1 1s linear infinite;
}

/* 3.自定义滚动条 */
.scroll {
    width: 100%;
    height: 100%;
    overflow: auto;
}

/* 
    ::-webkit-scrollbar 滚动条整体部分
    ::-webkit-scrollbar-thumb  滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）
    ::-webkit-scrollbar-track  滚动条的轨道（里面装有Thumb）
    ::-webkit-scrollbar-button 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。
    ::-webkit-scrollbar-track-piece 内层轨道，滚动条中间部分（除去）
    ::-webkit-scrollbar-corner 边角，即两个滚动条的交汇处
    ::-webkit-resizer 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件 
*/

/* 整个滚动条元素 */
.scroll::-webkit-scrollbar {
    width: 8px; 
    /* 设置为0则不显示滚动条且占用宽度为0(仍然可滚动) */
}

/* 滚动条上的轨道 */
.scroll::-webkit-scrollbar-track {
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    border-radius: 10px;
}

/* 滚动条轨道上可拖拽的元素 */
.scroll::-webkit-scrollbar-thumb {
    border-radius: 10px;
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);
}

/* 4.hover菜单 */
.hoverManu {
    list-style: none;
}
.hoverManu .cont {
    width: 70px;
    height: 70px;
    background-color: #fff;
    position: absolute;
    top: 50%;
    left: 10px;
    transform: translateY(-50%);
}
.hoverManu .cont:hover > .menu,
.hoverManu .cont:focus > .menu {
    visibility: visible;
    /* display: block; */
}
.hoverManu .cont .menu {
    margin: 0;
    padding: 0;
    list-style: none;
    position: absolute;
    top: 0;
    left: 100%;
    width: 70px;
    background: #333;
    color: white;
    /* display: none; */
    visibility: hidden;
}

/* 5.三角边框 */
.find-div-body{
    position: relative;
    right:0px;
    width:100%;
    height:100%;
    padding:8px;
    background-color: #FFFFFF;
    border: #cccccc solid 1px;
    border-radius: 3px;
}
.find-div-body:before{
    box-sizing: content-box;
    width: 0px;
    height: 0px;
    position: absolute;
    top: -16px;;
    right:41px;
    padding:0;
    border-bottom:8px solid #FFFFFF;
    border-top:8px solid transparent;
    border-left:8px solid transparent;
    border-right:8px solid transparent;
    display: block;
    content:'';
    z-index: 12;
}
.find-div-body:after{
    box-sizing: content-box;
    width: 0px;
    height: 0px;
    position: absolute;
    top: -18px;;
    right:40px;
    padding:0;
    border-bottom:9px solid #cccccc;
    border-top:9px solid transparent;
    border-left:9px solid transparent;
    border-right:9px solid transparent;
    display: block;
    content:'';
    z-index:10
}

/* 6.等高布局 */
.sameHeight {
    width: 100%;
    height: auto;
    display: inline-block;
    border: 1px solid #000;
    overflow: hidden;
}
.sameHeight .sh_left,
.sameHeight .sh_right  {
    width: 50%;
    float:left;
    padding-bottom: 9999px;
    margin-bottom: -9999px;
}
.sameHeight .sh_left {
    background: red;
}
.sameHeight .sh_right {
    background: blue;
}

/* 7.同心圆/三条杠 */
.clipPadding  .icon_menu {
    display: inline-block;
    padding:  10px 0;
    width:  50px;
    height: 5px;
    border-top: 5px solid #000;
    border-bottom: 5px solid #000;
    background-color: currentColor;
    background-clip: content-box;
    margin-top: 10px;
    margin-bottom: 20px;
}
.clipPadding  .icon_dot {
    display: inline-block;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    padding: 10px;
    border: 5px solid #000;
    background-color: #000;
    background-clip: content-box; 
    /* 保留 content-box */
}

/* 8.margin:auto垂直居中 */
.autoMargin {
    width: 100%;
    height: 100%;
    border: 1px solid #000;
    position: relative;
}
.autoMargin>div {
    position: absolute;
    background: red;
    left: 0;
    right:0;
    top:0;
    bottom:0;
    height: 50px;
    width: 50px;
    margin: auto;
}

/* 9.点击涟漪效果 */
.paper {
    background-color: #fffeff;
    width: 80%;
    height: 40px;
    overflow: hidden;
    position: relative;
    margin-bottom: 16px;
    box-shadow: 0px 1px 2px 1px #d3d2d3;
    border-radius: 2px;
    transition: 0.1s ease-in;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.paper:hover {
    cursor: pointer;
}

.ripple {
    background-color: rgba(0, 0, 0, 0.45);
    border-radius: 100%;
    height: 20px;
    width: 20px;
    position: relative;
    transform: scale(0);
}

.animate {
    -webkit-animation: ripple 0.4s linear;
    animation: ripple 0.4s linear;
}

@keyframes ripple {
    100% {
        transform: scale(20);
        background-color: transparent;
    }
}

/* 10.用border实现等高布局 */
.sameHeight_borderBox {
    background: blue;
    border-left: 70px solid red;
    height: auto;
}
.sameHeight_borderBox .left {
    width: 70px;
    margin-left: -70px;
    float: left;
}

/* 11.用vertical实现垂直居中 */
.verBox {
    visibility: hidden;
    width: auto;
    height: auto;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right:0;
    z-index: 99;
    background: rgba(0,0,0,0.5);
    /* 关键代码1: 字体为0后基线位置就等于元素上边沿(x-height/2 --- 0/2) */
    font-size: 0;
}
.verBox:after {
    content:'';
    color: #fff;
    display: inline-block;
    /* 关键代码2: 
        未设高度时after中的文本与容器内的文本对齐,设置高度后中心点的位置不断变化
        设置伪元素高度为可视窗口的100%, 通过缓慢增加发现高度增加到超过弹窗容器高度时开始向下增加(css默认左上方排列) */
    height: 100%;
    vertical-align: middle;
}
.verBox .vbWrap {
    background-color: #fff;
    border-radius: 6px;
    font-size: 14px;
    display: inline-block;
    vertical-align: middle;
}

.verBox .vbWrap .vbContent {
    width: 240px;
    height: 120px;
    padding: 20px;
}

/* 12.纯css选项卡 */
.cssTag {
    width: 100%;
    height: 100%;
}
.cssTag .demo {
    height: 70%;
    border: 1px solid #000;
    overflow: hidden;
}
.cssTag .demo .tag {
    height: 100%;
    position: relative;
}
.cssTag .demo input {
    width: 0;
    height: inherit;
    outline: none;
    border: none;
    position: absolute;
    top: 0;
}
.cssTag .link label{
    display: inline-block;
    width: 20px;
    border: 1px solid #000;
    cursor: pointer;
}